namespace Microsoft.PrivacyServices.CommandFeed.Service.BackgroundTasks.CommandStatusAggregation
{
    using System;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.PrivacyServices.CommandFeed.Service.Common;

    /// <summary>
    /// Interface for an export malware scanner.
    /// </summary>
    public interface IExportMalwareScanner : IDisposable
    {
        /// <summary>
        /// Gets the underlying stream that was scanned.
        /// </summary>
        Stream ScanStream { get; }

        /// <summary>
        /// Scans a source stream for malware.
        /// </summary>
        /// <param name="destinationPath">Path for the stream.</param>
        /// <param name="stream">Source stream.</param>
        /// <param name="commandId">Id for the export command.</param>
        /// <param name="maxCompletedTime">Maximum completed time for export commands.</param>
        /// <param name="cancellationToken">Cancellation token.</param>
        /// <returns>Scan result.</returns>
        Task<DefenderScanResult> ScanAsync(
            string destinationPath,
            Stream stream,
            CommandId commandId,
            DateTimeOffset? maxCompletedTime,
            CancellationToken cancellationToken);
    }
}
