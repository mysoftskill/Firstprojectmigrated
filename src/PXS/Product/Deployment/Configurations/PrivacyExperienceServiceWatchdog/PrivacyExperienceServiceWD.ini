[WatchdogSettings]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IPrivacyExperienceServiceWDConfiguration
IsRunningLocally=false
envnamespace:onebox$IsRunningLocally=true
MachineFunction=PrivacyViewMF
SslCertificateCommonName=pxs.privacy.microsoft-int.com
envnamespace:prod$SslCertificateCommonName=pxs.api.account.microsoft.com
envnamespace:ppe$SslCertificateCommonName=pxs.api.account.microsoft-ppe.com
MachineCheckTimeOut=00:02:00
CheckApisFailureThresholdInPercent=100
MsaS2STargetScope=pxs.api.account.microsoft-int.com
envnamespace:prod$MsaS2STargetScope=pxs.api.account.microsoft.com
envnamespace:ppe$MsaS2STargetScope=pxs.api.account.microsoft-ppe.com
RetryStrategyConfiguration=RetryStrategy
FamilyBaseUri=https://management.family.microsoft-int.com
envnamespace:prod$FamilyBaseUri=https://management.family.microsoft.com
envnamespace:ppe$FamilyBaseUri=https://management.family.microsoft.com
FamilyServiceTargetSite=family.api.account.microsoft-int.com
envnamespace:prod$FamilyServiceTargetSite=family.api.account.microsoft.com
envnamespace:ppe$FamilyServiceTargetSite=family.api.account.microsoft.com
RpsConfigPath=Config\INT\rpsserver.xml
envnamespace:prod$RpsConfigPath=Config\PROD\rpsserver.xml
envnamespace:ppe$RpsConfigPath=Config\PPE\rpsserver.xml

IsProdMsa=false
envnamespace:prod$IsProdMsa=true
envnamespace:ppe$IsProdMsa=true

DeleteFeedAgentId=EA17E82F-785D-4D7E-92B1-787AC6060C69
envnamespace:prod$DeleteFeedAgentId=d8074409-6dce-450a-8b97-245dbeae2664
envnamespace:ppe$DeleteFeedAgentId=f9218cb1-381f-4b1f-bdda-76be10fd372a

TargetDeleteFeedEnvironment=INT
envnamespace:ppe$TargetDeleteFeedEnvironment=PPE
envnamespace:prod$TargetDeleteFeedEnvironment=PROD

AzureStorageConfiguration=AzureStorageConfiguration

;- Xflow - https://asimov-xflow/Workflows/Details/PXS.CosmosExportWD#activities

CosmosExportWorkerAgentId=3134bf67-a6a9-405f-b334-4e5f287f7e87

IsBulkExportTestForMsaEnabled=true
envnamespace:ppe$IsBulkExportTestForMsaEnabled=true
envnamespace:prod$IsBulkExportTestForMsaEnabled=false

IsVortexTestEnabled=true
envnamespace:ppe$IsVortexTestEnabled=false
envnamespace:prod$IsVortexTestEnabled=false

EncryptedUsersConfigurationFilePath=wd-PrivacyUsersConfigurationBase64Encoded

;Maximum number of minutes since DSR was posted the watch dog will wait before moving the PrivacyTestFramework 
;to the next state in the DSR workflow (regardless of the actual status reported by graph).
EndToEndTestDsrStatusIsRunningTimeout=60
envnamespace:onebox$EndToEndTestDsrStatusIsRunningTimeout=1

;MSGraph Version used to Post and Query DSR and User Information for End to end tests
EndToEndTestGraphVersion=beta

;EndToEnd test can take a long time to run since some network requests can take up to 15s to return.
;EndToEndTestRunDurationPercentOfMachineCheckTimeout is the percent of the total MachineCheckTimeOut time, after which
;the EndToEnd test will not initiate any further network requests.  It will complete any outstanding requests, and then
;exit gracefully before the watchdog orchestration kills the process for running too long. 25% of the total running time
;has a very high probability of completing before reaching the MachineCheckTimeOut duration.
EndToEndTestRunDurationPercentOfMachineCheckTimeout=25

;minimum time (milliseconds) to wait before querying graph on status of export
;1000ms*60seconds*60minutes=3600000
EndToEndTestWaitMsBeforeNextExportStatusRequest=3600000
envnamespace:onebox$EndToEndTestWaitMsBeforeNextExportStatusRequest=20000

;Filter used to reduce the number of times the watch dog will be executed.
;only launch the end to end tests when the watchdog target machine is:
;  * PXS-PPE-SN3P\SN3PEPF000001E9 in PPE
;  * PXS-Prod-BN3P\BN3PEPF00000063 in Prod
;  * pxs.api.account.microsoft-int.com in sandbox.
;The end-to-end tests themselves do know about target machines, this is only intended to be used
;to reduce the frequency the watchdog is executed.
EndToEndTestExecutionFilter=SN3PEPF000001E9
envnamespace:prod$EndToEndTestExecutionFilter=BN3PEPF00000063
envnamespace:onebox$EndToEndTestExecutionFilter=pxs.api.account.microsoft-int.com

;Prefix for blob container names the end-to-end watchdog creates for export DSR tests
EndToEndTestExportBlobContainerPrefix=ngp-end-to-end-test

; Note this won't work for INT anyway (calling AMC to do exports) since AMC int doesn't even call PXS int.
; The site id for AMC
ExportAmcSiteId=292666
envnamespace:ppe$ExportAmcSiteId=292915
envnamespace:prod$ExportAmcSiteId=292666
; The site uri for AMC for exports
ExportAmcSiteUri=https://account.microsoft-int.com
envnamespace:ppe$ExportAmcSiteUri=https://account.microsoft-ppe.com
envnamespace:prod$ExportAmcSiteUri=https://account.microsoft.com
; The base uri for AMC for exports
ExportAmcBaseUri=https://privacy.account.microsoft-int.com/
envnamespace:ppe$ExportAmcBaseUri=https://privacy.account.microsoft-ppe.com/
envnamespace:prod$ExportAmcBaseUri=https://account.microsoft.com/

;minimum time the PrivacyRequestManager waits between DSR task executions
;1second*1000ms=1000
EndToEndTestWaitMsBetweenDSRTaskExecutions=1000

;Cosmos configuration
SyntheticExportSignalCosmosPath=ExportCosmosVcConfig
SyntheticCosmosDataAgentId=00000000-0000-0000-0000-000000000000
SyntheticPrivacyDataAgentId=00000000-0000-0000-0000-000000000000

[RetryStrategy]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IRetryStrategyConfiguration
RetryMode=FixedInterval
FixedIntervalRetryConfiguration=RetryConfiguration

[RetryConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IFixedIntervalRetryConfiguration
RetryCount=2
RetryIntervalInMilliseconds=5000

; **********************************************************************************************
; Azure storage config

[AzureStorageConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IAzureStorageConfiguration

; Storage Emulator uses a well-known account name and auth key. Source: https://docs.microsoft.com/en-us/azure/storage/storage-use-emulator
envnamespace:onebox$UseEmulator=true

AccountName=pxstest
envnamespace:prod$AccountName=pxsprod01
envnamespace:ppe$AccountName=pxsppe

AuthKeyEncryptedFilePath=sa-pxstest
; Local is meant to use emulator. However, if emulator is set to 'false', the following encrypted file is used,a long with the account name.
envnamespace:prod$AuthKeyEncryptedFilePath=sa-pxsprod01
envnamespace:ppe$AuthKeyEncryptedFilePath=sa-pxsppe

[ExportCosmosVcConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICosmosVcConfig
CosmosVcPath=https://be.cosmos15.osdinfra.net/cosmos/PXSCosmos15.Prod/local/PXS-WD/export/TEST
envnamespace:ppe$CosmosVcPath=https://be.cosmos15.osdinfra.net/cosmos/PXSCosmos15.Prod/local/PXS-WD/export/PPE
envnamespace:prod$CosmosVcPath=https://be.cosmos15.osdinfra.net/cosmos/PXSCosmos15.Prod/local/PXS-WD/export/PROD
CosmosCertificateSubject=adg-cs.cosmos.int.phx.gbl
envnamespace:ppe$CosmosCertificateSubject=adg-cs.cosmos.ppe.phx.gbl
envnamespace:prod$CosmosCertificateSubject=adg-cs.cosmos.prod.phx.gbl