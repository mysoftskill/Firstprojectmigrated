[CosmosExportAgentConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICosmosExportAgentConfig
Tasks=CosmosMonitorTaskConfig,DataManifestProcessorConfig,FileProcessorConfig,FileCompleteProcessorConfig,CommandMonitorConfig,QueueMonitorConfig,ManifestFileStateCleaner,CommandFileStateCleaner,CommandStateCleaner
envnamespace:onebox$Tasks=DataManifestProcessorConfig,FileProcessorConfig,FileCompleteProcessorConfig,CommandMonitorConfig,QueueMonitorConfig,ManifestFileStateCleaner,CommandFileStateCleaner,CommandStateCleaner
AzureStorageConfiguration=AzureStorageConfiguration
PcfEndpointConfig=PcfEndpontConfig
CosmosVcs=CosmosVc15,CosmosVc09,CosmosVc08,CosmosVc15Activity
LockTableName=cosmosexportagentlocks
CosmosPathsAndExpiryTimes=CosmosPathsAndExpiryTimes
ActivityLogCosmosTag=CosmosVc15Activity
DeadLetterCosmosTag=CosmosVc15
StatsLogCosmosTag=CosmosVc15
CosmosRetryStrategy=IncrementalRetryStrategy
CommandFeedRetryStrategy=IncrementalRetryStrategy
FileSizeThresholds=FileQueueSizeThresholds
AdlsConfiguration=AdlsConfig
MaxActivityLogBufferSize=40000000

; **********************************************************************************************
; Cosmos VC list

[CosmosVc15Activity]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ITaggedCosmosVcConfig
CosmosTag=CosmosVc15Activity
CosmosVcPath=https://be.cosmos15.osdinfra.net/cosmos/PXSCosmos15.Prod/
envnamespace:prod$CosmosVcPath=https://be.cosmos15.osdinfra.net/cosmos/PXSCosmos15.Prod/local/ReportsAndLogs/PROD/
envnamespace:ppe$CosmosVcPath=https://be.cosmos15.osdinfra.net/cosmos/PXSCosmos15.Prod/local/ReportsAndLogs/PPE/
ServicePointConfiguration=ServicePointConfigCosmos
UseDefaultCredentials=false
ApplyRelativeBasePath=false
CosmosCertificateSubject=adg-cs.cosmos.int.phx.gbl
envnamespace:ppe$CosmosCertificateSubject=adg-cs.cosmos.ppe.phx.gbl
envnamespace:prod$CosmosCertificateSubject=adg-cs.cosmos.prod.phx.gbl
CosmosAdlsAccountName=pxscosmos15-prod-c15
RootDir=/local/ReportsAndLogs/PPE/
envnamespace:prod$RootDir=/local/ReportsAndLogs/PROD/

[CosmosVc15]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ITaggedCosmosVcConfig
CosmosTag=CosmosVc15
CosmosVcPath=https://be.cosmos15.osdinfra.net/cosmos/PXSCosmos15.Prod/
ServicePointConfiguration=ServicePointConfigCosmos
ApplyRelativeBasePath=true
UseDefaultCredentials=false
CosmosCertificateSubject=adg-cs.cosmos.int.phx.gbl
envnamespace:ppe$CosmosCertificateSubject=adg-cs.cosmos.ppe.phx.gbl
envnamespace:prod$CosmosCertificateSubject=adg-cs.cosmos.prod.phx.gbl
CosmosAdlsAccountName=pxscosmos15-prod-c15

[CosmosVc09]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ITaggedCosmosVcConfig
CosmosTag=CosmosVc09
CosmosVcPath=https://be.cosmos09.osdinfra.net/cosmos/PXSCosmos09.Prod/
ServicePointConfiguration=ServicePointConfigCosmos
ApplyRelativeBasePath=true
UseDefaultCredentials=false
CosmosCertificateSubject=adg-cs.cosmos.int.phx.gbl
envnamespace:ppe$CosmosCertificateSubject=adg-cs.cosmos.ppe.phx.gbl
envnamespace:prod$CosmosCertificateSubject=adg-cs.cosmos.prod.phx.gbl
CosmosAdlsAccountName=pxscosmos09-prod-c09

[CosmosVc08]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ITaggedCosmosVcConfig
CosmosTag=CosmosVc08
CosmosVcPath=https://be.cosmos08.osdinfra.net/cosmos/PXSCosmos08.Prod/
ServicePointConfiguration=ServicePointConfigCosmos
ApplyRelativeBasePath=true
UseDefaultCredentials=false
CosmosCertificateSubject=adg-cs.cosmos.int.phx.gbl
envnamespace:ppe$CosmosCertificateSubject=adg-cs.cosmos.ppe.phx.gbl
envnamespace:prod$CosmosCertificateSubject=adg-cs.cosmos.prod.phx.gbl
CosmosAdlsAccountName=pxscosmos08-prod-c08

[CosmosPathsAndExpiryTimes]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICosmosRelativePathsAndExpiryTimes
BasePath=local/ExportAndAuditDrop/INT/v2/
envnamespace:prod$BasePath=local/ExportAndAuditDrop/PROD/v2/
envnamespace:ppe$BasePath=local/ExportAndAuditDrop/PPE/v2/
AgentOutput=ExportData/
PostProcessHolding=Export/Holding/
HoldingExpiryHours=168
ManifestHoldingExpiryHours=708
ActivityLog=Export/ActivityLog/
ActivityLogExpiryHours=708
envnamespace:onebox$ActivityLogExpiryHours=2
DeadLetter=Export/DeadLetterStore/
DeadLetterExpiryHours=504
envnamespace:onebox$DeadLetterExpiryHours=4	
StatsLog=Export/StatsLog/
StatsLogExpiryHours=168
envnamespace:onebox$StatsLogExpiryHours=24

; **********************************************************************************************
; Task list

[CosmosMonitorTaskConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICosmosMonitorConfig
Tag=CosmosMonitor
TaskType=CosmosMonitor
InstanceCount=0
envnamespace:onebox$InstanceCount=1
envnamespace:prod$InstanceCount=3
envnamespace:ppe$InstanceCount=3
CosmosVcs=CosmosVc08,CosmosVc09,CosmosVc15
envnamespace:onebox$CosmosVcs=
RepeatDelayMinutes=30
envnamespace:onebox$RepeatDelayMinutes=5
DelayOnExceptionMinutes=5
MaxEnqueueAgeHours=480
DeleteAgeHours=504
MinBatchAgeMinutes=10
envnamespace:onebox$MinBatchAgeMinutes=1

[DataManifestProcessorConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IDataManifestProcessorConfig
Tag=DataManifestProcessor
TaskType=DataManifestProcessor
InstanceCount=0
envnamespace:onebox$InstanceCount=1
envnamespace:prod$InstanceCount=5
envnamespace:ppe$InstanceCount=5
LeaseMinutes=20
envnamespace:onebox$LeaseMinutes=10
MinimumRenewMinutes=2
MaxStateUpdateAttempts=3
DelayIfCouldNotCompleteMinutes=15
envnamespace:onebox$DelayIfCouldNotCompleteMinutes=1
MaxCommandWaitTimeMinutes=720
envnamespace:onebox$MaxCommandWaitTimeMinutes=5
envnamespace:prod$MaxCommandWaitTimeMinutes=720
envnamespace:ppe$MaxCommandWaitTimeMinutes=30
MaxDequeueCount=30
CommandReaderLeaseUpdateRowCount = 1000000
envnamespace:onebox$CommandReaderLeaseUpdateRowCount = 100

[FileProcessorConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IFileProcessorConfig
Tag=FileProcessor
TaskType=FileProcessor
InstanceCount=0
envnamespace:onebox$InstanceCount=1
envnamespace:prod$InstanceCount=9
envnamespace:ppe$InstanceCount=9
LeaseMinutes=30
envnamespace:prod$LeaseMinutes=20
envnamespace:ppe$LeaseMinutes=20
envnamespace:onebox$LeaseMinutes=10
MinimumRenewMinutes=2
CommandPendingByteThreshold=1048576
OverallPendingByteThreshold=5242880
DelayIfCouldNotCompleteMinutes=20
envnamespace:onebox$DelayIfCouldNotCompleteMinutes=1
MaxDequeueCount=20
ProgressUpdateSeconds=60
OversizedFileInstances=1
envnamespace:onebox$OversizedFileInstances=1
LargeFileInstances=2
envnamespace:onebox$LargeFileInstances=1
MediumFileInstances=5
envnamespace:onebox$MediumFileInstances=1
EmptyFileInstances=1
AssumeNonTransientThreshold=3.00:00:00
envnamespace:onebox$AssumeNonTransientThreshold=0.00:15:00

[FileCompleteProcessorConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IFileCompleteProcessorConfig
Tag=FileCompleteProcessor
TaskType=FileCompleteProcessor
InstanceCount=0
envnamespace:onebox$InstanceCount=1
envnamespace:prod$InstanceCount=5
envnamespace:ppe$InstanceCount=5
LeaseMinutes=30
envnamespace:onebox$LeaseMinutes=5
MinimumRenewMinutes=2
MaxStateUpdateAttempts=3
CommandReaderLeaseUpdateRowCount = 1000000
envnamespace:onebox$CommandReaderLeaseUpdateRowCount = 100

[CommandMonitorConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICommandMonitorConfig
Tag=CommandMonitor
TaskType=CommandMonitor
InstanceCount=0
envnamespace:onebox$InstanceCount=1
envnamespace:prod$InstanceCount=1
envnamespace:ppe$InstanceCount=1
LogToExternalStatus=true
SuppressIsTestCommandFailures=true
envnamespace:onebox$SuppressIsTestCommandFailures=true
envnamespace:prod$SuppressIsTestCommandFailures=true
envnamespace:ppe$SuppressIsTestCommandFailures=false

; the lease extenstion minutes is an ordered list of time lengths describing waits until the next time PCF gives us a command based 
;  on thenumber of times PCF has given us a command in the past.  For example, if we have seen the command 3 times, we would pull 
;  the 3rd element out of the list.
; as a convienience, the list has two features:
;  if the dequeue count is larger than the number of list elements, the last value is used (so the list can be thought of as an
;   infinite list with the last element repeating indefinitely)
;  to make large adjacent repetitions of the same value simpler to manage, the syntax <value>*<repeat count> can be used.  If no 
;   repeat count is specified, the value is assumed to be "1".  So 30*3,40,50*2,60 would expand to 30, 30, 30, 40, 50, 50, 60.
LeaseExtensionMinuteSet=60
envnamespace:prod$LeaseExtensionMinuteSet=60*24,720*12,1440
envnamespace:ppe$LeaseExtensionMinuteSet=60*24,720*12,1440
envnamespace:onebox$LeaseExtensionMinuteSet=5

AgentId=eeaaba79-031e-45a2-adb1-df43ff48c28f
envnamespace:prod$AgentId=3134bf67-a6a9-405f-b334-4e5f287f7e87
envnamespace:ppe$AgentId=3134bf67-a6a9-405f-b334-4e5f287f7e87
envnamespace:onebox$AgentId=eeaaba79-031e-45a2-adb1-df43ff48c28f
StockEndpointType=Ppe
envnamespace:prod$StockEndpointType=Prod
envnamespace:ppe$StockEndpointType=Ppe
AuthMode=Aad
SyntheticCommandAgents=9412f08e-aca5-4add-9c2c-b082e61f4f1a

[QueueMonitorConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IMonitorTaskConfig
Tag=QueueMonitor
TaskType=QueueMonitor
InstanceCount=0
envnamespace:onebox$InstanceCount=0
envnamespace:prod$InstanceCount=1
envnamespace:ppe$InstanceCount=1
UpdateFrequencySeconds=60

[ManifestFileStateCleaner]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICleanerConfig
Tag=ManifestFileStateCleaner
TaskType=StateCleaner
InstanceCount=0
envnamespace:onebox$InstanceCount=1
envnamespace:prod$InstanceCount=0
envnamespace:ppe$InstanceCount=1
Table=ManifestFile
LastModifiedThresholdDays=60
NonEmptyBatchDelaySeconds=60
EmptyBatchDelaySeconds=21600
DelayRandomLimit=60
MaxBatchSize=250

[CommandFileStateCleaner]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICleanerConfig
Tag=CommandFileStateCleaner
TaskType=StateCleaner
InstanceCount=0
envnamespace:onebox$InstanceCount=1
envnamespace:prod$InstanceCount=0
envnamespace:ppe$InstanceCount=1
Table=CommandFile
LastModifiedThresholdDays=60
NonEmptyBatchDelaySeconds=60
EmptyBatchDelaySeconds=21600
DelayRandomLimit=60
MaxBatchSize=250

[CommandStateCleaner]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICleanerConfig
Tag=CommandStateCleaner
TaskType=StateCleaner
InstanceCount=0
envnamespace:onebox$InstanceCount=1
envnamespace:prod$InstanceCount=0
envnamespace:ppe$InstanceCount=1
Table=Command
LastModifiedThresholdDays=60
NonEmptyBatchDelaySeconds=60
EmptyBatchDelaySeconds=21600
DelayRandomLimit=60
MaxBatchSize=250

; **********************************************************************************************
; PCF config (used with PXS HttpClient outgoing call wrapper)

[PcfEndpontConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IPrivacyPartnerAdapterConfiguration
CounterCategoryName=CosmosExportAgentPCF
BaseUrl=https://pcf.privacy.microsoft-ppe.com
envnamespace:prod$BaseUrl=https://pcf.privacy.microsoft.com
envnamespace:ppe$BaseUrl=https://pcf.privacy.microsoft-ppe.com
RetryStrategyConfiguration=FixedRetryStrategy
ServicePointConfiguration=ServicePointConfig
TimeoutInMilliseconds=10000
SkipServerCertValidation=false
PartnerId=PrivacyCommandFeed

; **********************************************************************************************
; Azure storage config

[AzureStorageConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IAzureStorageConfiguration

; Storage Emulator uses a well-known account name and auth key. Source: https://docs.microsoft.com/en-us/azure/storage/storage-use-emulator
envnamespace:onebox$UseEmulator=true

ServicePointConfiguration=ServicePointConfig

AccountName=pxstest
envnamespace:prod$AccountName=pxsprod01
envnamespace:ppe$AccountName=pxsppe

AuthKeyEncryptedFilePath=sa-pxstest
; Local is meant to use emulator. However, if emulator is set to 'false', the following encrypted file is used,a long with the account name.
envnamespace:prod$AuthKeyEncryptedFilePath=sa-pxsprod01
envnamespace:ppe$AuthKeyEncryptedFilePath=sa-pxsppe

; **********************************************************************************************
; misc config

[ServicePointConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IServicePointConfiguration
; Increasing MaxIdleTime/ConnectionLeaseTimeout to a value greater than the polling interval used by the adapter.
MaxIdleTime=10000
ConnectionLeaseTimeout=10000
ConnectionLimit=20

[ServicePointConfigCosmos]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IServicePointConfiguration
MaxIdleTime=60000
ConnectionLeaseTimeout=60000
ConnectionLimit=20

[IncrementalRetryStrategy]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IRetryStrategyConfiguration
RetryMode=IncrementInterval
IncrementIntervalRetryConfiguration=IncrementalRetryConfiguration

[IncrementalRetryConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IIncrementIntervalRetryConfiguration
RetryCount=3
InitialIntervalInMilliseconds=100
IntervalIncrementInMilliseconds=100

[FixedRetryStrategy]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IRetryStrategyConfiguration
RetryMode=FixedInterval
FixedIntervalRetryConfiguration=FixedRetryConfiguration

[FixedRetryConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IFixedIntervalRetryConfiguration
RetryCount=3
RetryIntervalInMilliseconds=1000

[FileQueueSizeThresholds]
_meta.type=Microsoft.Membership.MemberServices.Configuration.ICosmosFileSizeThresholds
; 1GB is about 1 minute of processing at current rates
Medium=1000000000

; 60GB is about 1 hour of processing at current rates
Large=60000000000

; 100GB is the limit per file we want to impose on data agents
Oversized=100000000000

[AdlsConfig]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IAdlsConfiguration
ClientAppId=975e1332-de26-4ac9-b120-fe35fa68adf1
envnamespace:prod$ClientAppId=12586d9c-4361-4ed3-9e88-17c1b23f6c91
ClientAppCertificateSubjectAdls=aad-auth-ppe.compliance-services.microsoft.com
envnamespace:prod$ClientAppCertificateSubjectAdls=aad-auth-prod.compliance-services.microsoft.com
AdlsAccountSuffix=azuredatalakestore.net
; AME tenantid
TenantId=33e01921-4d64-4f8c-a055-5bdaffd5e33d
