[VortexDeviceDeleteQueueProccessorConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IVortexDeviceDeleteQueueProccessorConfiguration
WaitOnQueueEmptyMilliseconds=5000
envnamespace:ci1$WaitOnQueueEmptyMilliseconds=0
envnamespace:ci2$WaitOnQueueEmptyMilliseconds=0
; Tuning needed for: ProcessorCount. These values determine the request rate downstream.
envnamespace:onebox$ProcessorCount=1
envnamespace:ci1$ProcessorCount=1
envnamespace:ci2$ProcessorCount=1
envnamespace:dev1$ProcessorCount=0
envnamespace:proxytest$ProcessorCount=0
ProcessorCount=2
ServicePointConfiguration=QueueServicePointConfiguration
AzureQueueStorageConfigurations=PrimaryQueueConfiguration,SecondaryQueueConfiguration

[QueueServicePointConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IServicePointConfiguration
MaxIdleTime=60000
ConnectionLeaseTimeout=60000
; Need many queue connections for enqueuing and deleting messages
envnamespace:onebox$ConnectionLimit=1000
ConnectionLimit=100
; https://blogs.msdn.microsoft.com/windowsazurestorage/2010/06/25/nagles-algorithm-is-not-friendly-towards-small-requests/
UseNagleAlgorithm=false

[VortexDeviceDeleteWorkerConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IVortexDeviceDeleteWorkerConfiguration
envnamespace:onebox$EnableConsoleLogging=true
EnableConsoleLogging=false
QueueProccessorConfig=VortexDeviceDeleteQueueProccessorConfiguration

[PrimaryQueueConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IAzureStorageConfiguration
; Default
AccountName=pxstest
AuthKeyEncryptedFilePath=sa-pxstest
StorageEndpointSuffix=core.windows.net
AnaheimIdQueueName=anaheimid
; ADG-CS-UAMI
AnaheimIdUamiId=e6b298d8-5aea-43c2-9613-3f7b6f7b6731
; Storage Emulator uses a well-known account name and auth key. Source: https://docs.microsoft.com/en-us/azure/storage/storage-use-emulator
envnamespace:onebox$UseEmulator=true
envnamespace:onebox$AccountName=aidstorageonebox
envnamespace:onebox$AnaheimIdQueueName=anaheimid-01
; CI1
envnamespace:ci1$AccountName=pxsci1westus2
envnamespace:ci1$AuthKeyEncryptedFilePath=sa-pxsci1westus2
; CI2
envnamespace:ci2$AccountName=pxsci2westus2
envnamespace:ci2$AuthKeyEncryptedFilePath=sa-pxsci2westus2
; DEV1
envnamespace:dev1$AccountName=pxsdev1westus2
envnamespace:dev1$AuthKeyEncryptedFilePath=sa-pxsdev1westus2
; PROXY TEST
envnamespace:proxytest$AccountName=pxsproxytestwestus2
envnamespace:proxytest$AuthKeyEncryptedFilePath=sa-pxsproxytestwestus2
; PPE
envnamespace:ppe$AccountName=pxsppe
envnamespace:ppe$AuthKeyEncryptedFilePath=sa-pxsppe
; PROD
envnamespace:prod$AccountName=pxsprod01
envnamespace:prod$AuthKeyEncryptedFilePath=sa-pxsprod01
envnamespace:prod$AnaheimIdUamiId=72a1b2ce-a31c-4c2f-821a-739f035ad3ee

[SecondaryQueueConfiguration]
_meta.type=Microsoft.Membership.MemberServices.Configuration.IAzureStorageConfiguration
; Default
AccountName=pxsinteastus
AuthKeyEncryptedFilePath=sa-pxsinteastus
StorageEndpointSuffix=core.windows.net
AnaheimIdQueueName=anaheimid
; ADG-CS-UAMI
AnaheimIdUamiId=e6b298d8-5aea-43c2-9613-3f7b6f7b6731

; Local is meant to use emulator. However, if emulator is set to 'false', the following encrypted file is used, along with the account name.
envnamespace:onebox$UseEmulator=true
envnamespace:onebox$AccountName=aidstorageonebox
envnamespace:onebox$AnaheimIdQueueName=anaheimid-02
; CI1
envnamespace:ci1$AccountName=pxsci1westus2
envnamespace:ci1$AuthKeyEncryptedFilePath=sa-pxsci1westus2
; CI2
envnamespace:ci2$AccountName=pxsci2westus2
envnamespace:ci2$AuthKeyEncryptedFilePath=sa-pxsci2westus2
; DEV1
envnamespace:dev1$AccountName=pxsdev1westus2
envnamespace:dev1$AuthKeyEncryptedFilePath=sa-pxsdev1westus2
; PROXY TEST
envnamespace:proxytest$AccountName=pxsproxytestwestus2
envnamespace:proxytest$AuthKeyEncryptedFilePath=sa-pxsproxytestwestus2
; PPE
envnamespace:ppe$AccountName=pxsppeeastus
envnamespace:ppe$AuthKeyEncryptedFilePath=sa-pxsppeeastus
; PROD
envnamespace:prod$AccountName=pxsprodeastus2
envnamespace:prod$AuthKeyEncryptedFilePath=sa-pxsprodeastus2
envnamespace:prod$AnaheimIdUamiId=72a1b2ce-a31c-4c2f-821a-739f035ad3ee