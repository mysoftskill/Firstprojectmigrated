//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Live.Mesh.Service.AsyncQueueService.Interface
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkItem", Namespace="http://schemas.datacontract.org/2004/07/Live.Mesh.Service.AsyncQueueService.Inter" +
        "face")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Live.Mesh.Service.AsyncQueueService.Interface.StatusWorkItem))]
    public partial class WorkItem : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private Live.Mesh.Service.AsyncQueueService.Interface.AggregationInfo AggregationField;

        private int ExpirationSecondsField;

        private string IdField;

        private byte[] PayloadField;

        private bool RetryField;

        private System.DateTime SubmissionTimeField;

        private short TakenCountField;

        private string TransactionIdField;

        private string TypeField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Live.Mesh.Service.AsyncQueueService.Interface.AggregationInfo Aggregation
        {
            get
            {
                return this.AggregationField;
            }
            set
            {
                this.AggregationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpirationSeconds
        {
            get
            {
                return this.ExpirationSecondsField;
            }
            set
            {
                this.ExpirationSecondsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Payload
        {
            get
            {
                return this.PayloadField;
            }
            set
            {
                this.PayloadField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Retry
        {
            get
            {
                return this.RetryField;
            }
            set
            {
                this.RetryField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmissionTime
        {
            get
            {
                return this.SubmissionTimeField;
            }
            set
            {
                this.SubmissionTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TakenCount
        {
            get
            {
                return this.TakenCountField;
            }
            set
            {
                this.TakenCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionId
        {
            get
            {
                return this.TransactionIdField;
            }
            set
            {
                this.TransactionIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AggregationInfo", Namespace="http://schemas.datacontract.org/2004/07/Live.Mesh.Service.AsyncQueueService.Inter" +
        "face")]
    public partial class AggregationInfo : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string KeyField;

        private int ThresholdSecondsField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key
        {
            get
            {
                return this.KeyField;
            }
            set
            {
                this.KeyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThresholdSeconds
        {
            get
            {
                return this.ThresholdSecondsField;
            }
            set
            {
                this.ThresholdSecondsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusWorkItem", Namespace="http://schemas.datacontract.org/2004/07/Live.Mesh.Service.AsyncQueueService.Inter" +
        "face")]
    public partial class StatusWorkItem : Live.Mesh.Service.AsyncQueueService.Interface.WorkItem
    {

        private Live.Mesh.Service.AsyncQueueService.Interface.SubscriberQueueStatus[] SubscriberQueueStatusesField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Live.Mesh.Service.AsyncQueueService.Interface.SubscriberQueueStatus[] SubscriberQueueStatuses
        {
            get
            {
                return this.SubscriberQueueStatusesField;
            }
            set
            {
                this.SubscriberQueueStatusesField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriberQueueStatus", Namespace="http://schemas.datacontract.org/2004/07/Live.Mesh.Service.AsyncQueueService.Inter" +
        "face")]
    public partial class SubscriberQueueStatus : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.DateTime ProcessedTimeField;

        private string QueueNameField;

        private bool WasSuccessfullyProcessedField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProcessedTime
        {
            get
            {
                return this.ProcessedTimeField;
            }
            set
            {
                this.ProcessedTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueName
        {
            get
            {
                return this.QueueNameField;
            }
            set
            {
                this.QueueNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WasSuccessfullyProcessed
        {
            get
            {
                return this.WasSuccessfullyProcessedField;
            }
            set
            {
                this.WasSuccessfullyProcessedField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AggregationGroup", Namespace="http://schemas.datacontract.org/2004/07/Live.Mesh.Service.AsyncQueueService.Inter" +
        "face")]
    public partial class AggregationGroup : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string IdField;

        private System.DateTime LeaseExpirationTimeField;

        private string QueueNameField;

        private System.DateTime TakenTimeField;

        private Live.Mesh.Service.AsyncQueueService.Interface.WorkItem[] WorkItemsField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LeaseExpirationTime
        {
            get
            {
                return this.LeaseExpirationTimeField;
            }
            set
            {
                this.LeaseExpirationTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueName
        {
            get
            {
                return this.QueueNameField;
            }
            set
            {
                this.QueueNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TakenTime
        {
            get
            {
                return this.TakenTimeField;
            }
            set
            {
                this.TakenTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Live.Mesh.Service.AsyncQueueService.Interface.WorkItem[] WorkItems
        {
            get
            {
                return this.WorkItemsField;
            }
            set
            {
                this.WorkItemsField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IAsyncQueueService2")]
public interface IAsyncQueueService2
{

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/AddWork", ReplyAction="http://tempuri.org/IAsyncQueueService2/AddWorkResponse")]
    System.Collections.Generic.Dictionary<string, string> AddWork(string queueName, Live.Mesh.Service.AsyncQueueService.Interface.WorkItem workItem);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/AddWork", ReplyAction="http://tempuri.org/IAsyncQueueService2/AddWorkResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> AddWorkAsync(string queueName, Live.Mesh.Service.AsyncQueueService.Interface.WorkItem workItem);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/TakeWork", ReplyAction="http://tempuri.org/IAsyncQueueService2/TakeWorkResponse")]
    Live.Mesh.Service.AsyncQueueService.Interface.AggregationGroup[] TakeWork(string queueName, short aggregationGroupsToTake, int leaseTimeoutSeconds);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/TakeWork", ReplyAction="http://tempuri.org/IAsyncQueueService2/TakeWorkResponse")]
    System.Threading.Tasks.Task<Live.Mesh.Service.AsyncQueueService.Interface.AggregationGroup[]> TakeWorkAsync(string queueName, short aggregationGroupsToTake, int leaseTimeoutSeconds);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/CompleteWork", ReplyAction="http://tempuri.org/IAsyncQueueService2/CompleteWorkResponse")]
    void CompleteWork(string queueName, string aggregationGroupId);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/CompleteWork", ReplyAction="http://tempuri.org/IAsyncQueueService2/CompleteWorkResponse")]
    System.Threading.Tasks.Task CompleteWorkAsync(string queueName, string aggregationGroupId);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/ExtendLease", ReplyAction="http://tempuri.org/IAsyncQueueService2/ExtendLeaseResponse")]
    void ExtendLease(string queueName, string aggregationGroupId, int leaseExtensionSeconds);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/ExtendLease", ReplyAction="http://tempuri.org/IAsyncQueueService2/ExtendLeaseResponse")]
    System.Threading.Tasks.Task ExtendLeaseAsync(string queueName, string aggregationGroupId, int leaseExtensionSeconds);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/ReleaseWork", ReplyAction="http://tempuri.org/IAsyncQueueService2/ReleaseWorkResponse")]
    void ReleaseWork(string queueName, string aggregationGroupId, int waitIntervalSeconds, string debugInfo);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/ReleaseWork", ReplyAction="http://tempuri.org/IAsyncQueueService2/ReleaseWorkResponse")]
    System.Threading.Tasks.Task ReleaseWorkAsync(string queueName, string aggregationGroupId, int waitIntervalSeconds, string debugInfo);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/GetWorkItem", ReplyAction="http://tempuri.org/IAsyncQueueService2/GetWorkItemResponse")]
    Live.Mesh.Service.AsyncQueueService.Interface.WorkItem GetWorkItem(string queueName, string workItemId);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/GetWorkItem", ReplyAction="http://tempuri.org/IAsyncQueueService2/GetWorkItemResponse")]
    System.Threading.Tasks.Task<Live.Mesh.Service.AsyncQueueService.Interface.WorkItem> GetWorkItemAsync(string queueName, string workItemId);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/GetWorkItems", ReplyAction="http://tempuri.org/IAsyncQueueService2/GetWorkItemsResponse")]
    Live.Mesh.Service.AsyncQueueService.Interface.WorkItem[] GetWorkItems(string queueName, string aggregationKey, string workItemId);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/GetWorkItems", ReplyAction="http://tempuri.org/IAsyncQueueService2/GetWorkItemsResponse")]
    System.Threading.Tasks.Task<Live.Mesh.Service.AsyncQueueService.Interface.WorkItem[]> GetWorkItemsAsync(string queueName, string aggregationKey, string workItemId);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/DeleteWorkItems", ReplyAction="http://tempuri.org/IAsyncQueueService2/DeleteWorkItemsResponse")]
    void DeleteWorkItems(string queueName, string aggregationKey, string workItemId);

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsyncQueueService2/DeleteWorkItems", ReplyAction="http://tempuri.org/IAsyncQueueService2/DeleteWorkItemsResponse")]
    System.Threading.Tasks.Task DeleteWorkItemsAsync(string queueName, string aggregationKey, string workItemId);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAsyncQueueService2Channel : IAsyncQueueService2, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AsyncQueueService2Client : System.ServiceModel.ClientBase<IAsyncQueueService2>, IAsyncQueueService2
{

    public AsyncQueueService2Client()
    {
    }

    public AsyncQueueService2Client(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public AsyncQueueService2Client(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public AsyncQueueService2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public AsyncQueueService2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public System.Collections.Generic.Dictionary<string, string> AddWork(string queueName, Live.Mesh.Service.AsyncQueueService.Interface.WorkItem workItem)
    {
        return base.Channel.AddWork(queueName, workItem);
    }

    public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> AddWorkAsync(string queueName, Live.Mesh.Service.AsyncQueueService.Interface.WorkItem workItem)
    {
        return base.Channel.AddWorkAsync(queueName, workItem);
    }

    public Live.Mesh.Service.AsyncQueueService.Interface.AggregationGroup[] TakeWork(string queueName, short aggregationGroupsToTake, int leaseTimeoutSeconds)
    {
        return base.Channel.TakeWork(queueName, aggregationGroupsToTake, leaseTimeoutSeconds);
    }

    public System.Threading.Tasks.Task<Live.Mesh.Service.AsyncQueueService.Interface.AggregationGroup[]> TakeWorkAsync(string queueName, short aggregationGroupsToTake, int leaseTimeoutSeconds)
    {
        return base.Channel.TakeWorkAsync(queueName, aggregationGroupsToTake, leaseTimeoutSeconds);
    }

    public void CompleteWork(string queueName, string aggregationGroupId)
    {
        base.Channel.CompleteWork(queueName, aggregationGroupId);
    }

    public System.Threading.Tasks.Task CompleteWorkAsync(string queueName, string aggregationGroupId)
    {
        return base.Channel.CompleteWorkAsync(queueName, aggregationGroupId);
    }

    public void ExtendLease(string queueName, string aggregationGroupId, int leaseExtensionSeconds)
    {
        base.Channel.ExtendLease(queueName, aggregationGroupId, leaseExtensionSeconds);
    }

    public System.Threading.Tasks.Task ExtendLeaseAsync(string queueName, string aggregationGroupId, int leaseExtensionSeconds)
    {
        return base.Channel.ExtendLeaseAsync(queueName, aggregationGroupId, leaseExtensionSeconds);
    }

    public void ReleaseWork(string queueName, string aggregationGroupId, int waitIntervalSeconds, string debugInfo)
    {
        base.Channel.ReleaseWork(queueName, aggregationGroupId, waitIntervalSeconds, debugInfo);
    }

    public System.Threading.Tasks.Task ReleaseWorkAsync(string queueName, string aggregationGroupId, int waitIntervalSeconds, string debugInfo)
    {
        return base.Channel.ReleaseWorkAsync(queueName, aggregationGroupId, waitIntervalSeconds, debugInfo);
    }

    public Live.Mesh.Service.AsyncQueueService.Interface.WorkItem GetWorkItem(string queueName, string workItemId)
    {
        return base.Channel.GetWorkItem(queueName, workItemId);
    }

    public System.Threading.Tasks.Task<Live.Mesh.Service.AsyncQueueService.Interface.WorkItem> GetWorkItemAsync(string queueName, string workItemId)
    {
        return base.Channel.GetWorkItemAsync(queueName, workItemId);
    }

    public Live.Mesh.Service.AsyncQueueService.Interface.WorkItem[] GetWorkItems(string queueName, string aggregationKey, string workItemId)
    {
        return base.Channel.GetWorkItems(queueName, aggregationKey, workItemId);
    }

    public System.Threading.Tasks.Task<Live.Mesh.Service.AsyncQueueService.Interface.WorkItem[]> GetWorkItemsAsync(string queueName, string aggregationKey, string workItemId)
    {
        return base.Channel.GetWorkItemsAsync(queueName, aggregationKey, workItemId);
    }

    public void DeleteWorkItems(string queueName, string aggregationKey, string workItemId)
    {
        base.Channel.DeleteWorkItems(queueName, aggregationKey, workItemId);
    }

    public System.Threading.Tasks.Task DeleteWorkItemsAsync(string queueName, string aggregationKey, string workItemId)
    {
        return base.Channel.DeleteWorkItemsAsync(queueName, aggregationKey, workItemId);
    }
}
