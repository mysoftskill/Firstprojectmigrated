//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 
namespace Microsoft.Membership.MemberServices.PrivacyAdapters.ProfileIdentityService {

    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProfileServiceAPISoapServerSoap", Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(string[]))]
    public partial class ProfileServiceAPISoapServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private PPSoapHeader_wrapper pPSoapHeaderField;
        
        private tagWSSECURITYHEADER wSSecurityHeaderField;
        
        private System.Threading.SendOrPostCallback CreateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePassportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePassportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileByAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileByXPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProfileExOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfileWOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePassportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIdentityInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAppConsentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateAppPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDelegationTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReservePassportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateOneTimeTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOneTimeTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsumeOneTimeTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchSendOneTimeTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPreferredDogfoodStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToFamilyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromFamilyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMembershipOperationCompleted;
        
        /// <remarks/>
        public ProfileServiceAPISoapServer() {
            this.Url = "https://api.login.live-int.com/PPSAProfile.srf";
        }
        
        public PPSoapHeader_wrapper PPSoapHeader {
            get {
                return this.pPSoapHeaderField;
            }
            set {
                this.pPSoapHeaderField = value;
            }
        }
        
        public tagWSSECURITYHEADER WSSecurityHeader {
            get {
                return this.wSSecurityHeaderField;
            }
            set {
                this.wSSecurityHeaderField = value;
            }
        }
        
        /// <remarks/>
        public event CreateProfileCompletedEventHandler CreateProfileCompleted;
        
        /// <remarks/>
        public event CreatePassportsCompletedEventHandler CreatePassportsCompleted;
        
        /// <remarks/>
        public event UpdatePassportsCompletedEventHandler UpdatePassportsCompleted;
        
        /// <remarks/>
        public event GetProfileByAttributesCompletedEventHandler GetProfileByAttributesCompleted;
        
        /// <remarks/>
        public event GetProfileByXPathCompletedEventHandler GetProfileByXPathCompleted;
        
        /// <remarks/>
        public event UpdateProfileCompletedEventHandler UpdateProfileCompleted;
        
        /// <remarks/>
        public event UpdateProfileExCompletedEventHandler UpdateProfileExCompleted;
        
        /// <remarks/>
        public event DeleteProfileWCompletedEventHandler DeleteProfileWCompleted;
        
        /// <remarks/>
        public event DeletePassportsCompletedEventHandler DeletePassportsCompleted;
        
        /// <remarks/>
        public event GetIdentityInfoCompletedEventHandler GetIdentityInfoCompleted;
        
        /// <remarks/>
        public event UpdateUserAppConsentCompletedEventHandler UpdateUserAppConsentCompleted;
        
        /// <remarks/>
        public event EnumerateAppPermissionsCompletedEventHandler EnumerateAppPermissionsCompleted;
        
        /// <remarks/>
        public event GetDelegationTokenCompletedEventHandler GetDelegationTokenCompleted;
        
        /// <remarks/>
        public event ReservePassportsCompletedEventHandler ReservePassportsCompleted;
        
        /// <remarks/>
        public event GenerateOneTimeTokenCompletedEventHandler GenerateOneTimeTokenCompleted;
        
        /// <remarks/>
        public event SendOneTimeTokenCompletedEventHandler SendOneTimeTokenCompleted;
        
        /// <remarks/>
        public event ConsumeOneTimeTokenCompletedEventHandler ConsumeOneTimeTokenCompleted;
        
        /// <remarks/>
        public event BatchSendOneTimeTokenCompletedEventHandler BatchSendOneTimeTokenCompleted;
        
        /// <remarks/>
        public event SetPreferredDogfoodStateCompletedEventHandler SetPreferredDogfoodStateCompleted;
        
        /// <remarks/>
        public event AddToFamilyCompletedEventHandler AddToFamilyCompleted;
        
        /// <remarks/>
        public event RemoveFromFamilyCompletedEventHandler RemoveFromFamilyCompleted;
        
        /// <remarks/>
        public event UpdateMembershipCompletedEventHandler UpdateMembershipCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CreateProfile", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateProfile([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] bstrProfileXMLArray) {
            this.Invoke("CreateProfile", new object[] {
                        bstrProfileXMLArray});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateProfile(string[] bstrProfileXMLArray, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateProfile", new object[] {
                        bstrProfileXMLArray}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateProfile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void CreateProfileAsync(string[] bstrProfileXMLArray) {
            this.CreateProfileAsync(bstrProfileXMLArray, null);
        }
        
        /// <remarks/>
        public void CreateProfileAsync(string[] bstrProfileXMLArray, object userState) {
            if ((this.CreateProfileOperationCompleted == null)) {
                this.CreateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProfileOperationCompleted);
            }
            this.InvokeAsync("CreateProfile", new object[] {
                        bstrProfileXMLArray}, this.CreateProfileOperationCompleted, userState);
        }
        
        private void OnCreateProfileOperationCompleted(object arg) {
            if ((this.CreateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CreatePassports", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ppbstrCreatedAccountsArray", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] CreatePassports([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrAccountXMLArray, eTRANSACTION etFlags, out string pbstrErrorBlob) {
            object[] results = this.Invoke("CreatePassports", new object[] {
                        pbstrAccountXMLArray,
                        etFlags});
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePassports(string[] pbstrAccountXMLArray, eTRANSACTION etFlags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePassports", new object[] {
                        pbstrAccountXMLArray,
                        etFlags}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndCreatePassports(System.IAsyncResult asyncResult, out string pbstrErrorBlob) {
            object[] results = this.EndInvoke(asyncResult);
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CreatePassportsAsync(string[] pbstrAccountXMLArray, eTRANSACTION etFlags) {
            this.CreatePassportsAsync(pbstrAccountXMLArray, etFlags, null);
        }
        
        /// <remarks/>
        public void CreatePassportsAsync(string[] pbstrAccountXMLArray, eTRANSACTION etFlags, object userState) {
            if ((this.CreatePassportsOperationCompleted == null)) {
                this.CreatePassportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePassportsOperationCompleted);
            }
            this.InvokeAsync("CreatePassports", new object[] {
                        pbstrAccountXMLArray,
                        etFlags}, this.CreatePassportsOperationCompleted, userState);
        }
        
        private void OnCreatePassportsOperationCompleted(object arg) {
            if ((this.CreatePassportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePassportsCompleted(this, new CreatePassportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UpdatePassports", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ppbstrUpdatedAccountsArray", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] UpdatePassports([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrNetIDArray, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrAccountXMLArray, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrAdditionalXML, string bstrOptions, out string pbstrErrorBlob) {
            object[] results = this.Invoke("UpdatePassports", new object[] {
                        pbstrNetIDArray,
                        pbstrAccountXMLArray,
                        pbstrAdditionalXML,
                        bstrOptions});
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePassports(string[] pbstrNetIDArray, string[] pbstrAccountXMLArray, string[] pbstrAdditionalXML, string bstrOptions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePassports", new object[] {
                        pbstrNetIDArray,
                        pbstrAccountXMLArray,
                        pbstrAdditionalXML,
                        bstrOptions}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndUpdatePassports(System.IAsyncResult asyncResult, out string pbstrErrorBlob) {
            object[] results = this.EndInvoke(asyncResult);
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePassportsAsync(string[] pbstrNetIDArray, string[] pbstrAccountXMLArray, string[] pbstrAdditionalXML, string bstrOptions) {
            this.UpdatePassportsAsync(pbstrNetIDArray, pbstrAccountXMLArray, pbstrAdditionalXML, bstrOptions, null);
        }
        
        /// <remarks/>
        public void UpdatePassportsAsync(string[] pbstrNetIDArray, string[] pbstrAccountXMLArray, string[] pbstrAdditionalXML, string bstrOptions, object userState) {
            if ((this.UpdatePassportsOperationCompleted == null)) {
                this.UpdatePassportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePassportsOperationCompleted);
            }
            this.InvokeAsync("UpdatePassports", new object[] {
                        pbstrNetIDArray,
                        pbstrAccountXMLArray,
                        pbstrAdditionalXML,
                        bstrOptions}, this.UpdatePassportsOperationCompleted, userState);
        }
        
        private void OnUpdatePassportsOperationCompleted(object arg) {
            if ((this.UpdatePassportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePassportsCompleted(this, new UpdatePassportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetProfileByAttributes", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ppbstrProfileXMLArray", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] GetProfileByAttributes([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrNetIDArray, string bstrAttribList, uint ulFlags, out string pbstrErrorBlob) {
            object[] results = this.Invoke("GetProfileByAttributes", new object[] {
                        pbstrNetIDArray,
                        bstrAttribList,
                        ulFlags});
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProfileByAttributes(string[] pbstrNetIDArray, string bstrAttribList, uint ulFlags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProfileByAttributes", new object[] {
                        pbstrNetIDArray,
                        bstrAttribList,
                        ulFlags}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetProfileByAttributes(System.IAsyncResult asyncResult, out string pbstrErrorBlob) {
            object[] results = this.EndInvoke(asyncResult);
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileByAttributesAsync(string[] pbstrNetIDArray, string bstrAttribList, uint ulFlags) {
            this.GetProfileByAttributesAsync(pbstrNetIDArray, bstrAttribList, ulFlags, null);
        }
        
        /// <remarks/>
        public void GetProfileByAttributesAsync(string[] pbstrNetIDArray, string bstrAttribList, uint ulFlags, object userState) {
            if ((this.GetProfileByAttributesOperationCompleted == null)) {
                this.GetProfileByAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileByAttributesOperationCompleted);
            }
            this.InvokeAsync("GetProfileByAttributes", new object[] {
                        pbstrNetIDArray,
                        bstrAttribList,
                        ulFlags}, this.GetProfileByAttributesOperationCompleted, userState);
        }
        
        private void OnGetProfileByAttributesOperationCompleted(object arg) {
            if ((this.GetProfileByAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileByAttributesCompleted(this, new GetProfileByAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetProfileByXPath", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ppbstrProfileXMLArray", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] GetProfileByXPath([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrNetIDArray, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrXPathArray, out string pbstrErrorBlob) {
            object[] results = this.Invoke("GetProfileByXPath", new object[] {
                        pbstrNetIDArray,
                        pbstrXPathArray});
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProfileByXPath(string[] pbstrNetIDArray, string[] pbstrXPathArray, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProfileByXPath", new object[] {
                        pbstrNetIDArray,
                        pbstrXPathArray}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetProfileByXPath(System.IAsyncResult asyncResult, out string pbstrErrorBlob) {
            object[] results = this.EndInvoke(asyncResult);
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileByXPathAsync(string[] pbstrNetIDArray, string[] pbstrXPathArray) {
            this.GetProfileByXPathAsync(pbstrNetIDArray, pbstrXPathArray, null);
        }
        
        /// <remarks/>
        public void GetProfileByXPathAsync(string[] pbstrNetIDArray, string[] pbstrXPathArray, object userState) {
            if ((this.GetProfileByXPathOperationCompleted == null)) {
                this.GetProfileByXPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileByXPathOperationCompleted);
            }
            this.InvokeAsync("GetProfileByXPath", new object[] {
                        pbstrNetIDArray,
                        pbstrXPathArray}, this.GetProfileByXPathOperationCompleted, userState);
        }
        
        private void OnGetProfileByXPathOperationCompleted(object arg) {
            if ((this.GetProfileByXPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileByXPathCompleted(this, new GetProfileByXPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UpdateProfile", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProfile([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrProfileXMLArray) {
            this.Invoke("UpdateProfile", new object[] {
                        pbstrProfileXMLArray});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateProfile(string[] pbstrProfileXMLArray, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateProfile", new object[] {
                        pbstrProfileXMLArray}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateProfile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateProfileAsync(string[] pbstrProfileXMLArray) {
            this.UpdateProfileAsync(pbstrProfileXMLArray, null);
        }
        
        /// <remarks/>
        public void UpdateProfileAsync(string[] pbstrProfileXMLArray, object userState) {
            if ((this.UpdateProfileOperationCompleted == null)) {
                this.UpdateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProfileOperationCompleted);
            }
            this.InvokeAsync("UpdateProfile", new object[] {
                        pbstrProfileXMLArray}, this.UpdateProfileOperationCompleted, userState);
        }
        
        private void OnUpdateProfileOperationCompleted(object arg) {
            if ((this.UpdateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UpdateProfileEx", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProfileEx([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrNetIDArray, string bstrProfileXML) {
            this.Invoke("UpdateProfileEx", new object[] {
                        pbstrNetIDArray,
                        bstrProfileXML});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateProfileEx(string[] pbstrNetIDArray, string bstrProfileXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateProfileEx", new object[] {
                        pbstrNetIDArray,
                        bstrProfileXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateProfileEx(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateProfileExAsync(string[] pbstrNetIDArray, string bstrProfileXML) {
            this.UpdateProfileExAsync(pbstrNetIDArray, bstrProfileXML, null);
        }
        
        /// <remarks/>
        public void UpdateProfileExAsync(string[] pbstrNetIDArray, string bstrProfileXML, object userState) {
            if ((this.UpdateProfileExOperationCompleted == null)) {
                this.UpdateProfileExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProfileExOperationCompleted);
            }
            this.InvokeAsync("UpdateProfileEx", new object[] {
                        pbstrNetIDArray,
                        bstrProfileXML}, this.UpdateProfileExOperationCompleted, userState);
        }
        
        private void OnUpdateProfileExOperationCompleted(object arg) {
            if ((this.UpdateProfileExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProfileExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeleteProfileW", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProfileW([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] ppbstrNetIDArray, string bstrPropertyCollectionList) {
            this.Invoke("DeleteProfileW", new object[] {
                        ppbstrNetIDArray,
                        bstrPropertyCollectionList});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteProfileW(string[] ppbstrNetIDArray, string bstrPropertyCollectionList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteProfileW", new object[] {
                        ppbstrNetIDArray,
                        bstrPropertyCollectionList}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteProfileW(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteProfileWAsync(string[] ppbstrNetIDArray, string bstrPropertyCollectionList) {
            this.DeleteProfileWAsync(ppbstrNetIDArray, bstrPropertyCollectionList, null);
        }
        
        /// <remarks/>
        public void DeleteProfileWAsync(string[] ppbstrNetIDArray, string bstrPropertyCollectionList, object userState) {
            if ((this.DeleteProfileWOperationCompleted == null)) {
                this.DeleteProfileWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfileWOperationCompleted);
            }
            this.InvokeAsync("DeleteProfileW", new object[] {
                        ppbstrNetIDArray,
                        bstrPropertyCollectionList}, this.DeleteProfileWOperationCompleted, userState);
        }
        
        private void OnDeleteProfileWOperationCompleted(object arg) {
            if ((this.DeleteProfileWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfileWCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeletePassports", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePassports([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrNetIDArray) {
            this.Invoke("DeletePassports", new object[] {
                        pbstrNetIDArray});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeletePassports(string[] pbstrNetIDArray, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeletePassports", new object[] {
                        pbstrNetIDArray}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeletePassports(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeletePassportsAsync(string[] pbstrNetIDArray) {
            this.DeletePassportsAsync(pbstrNetIDArray, null);
        }
        
        /// <remarks/>
        public void DeletePassportsAsync(string[] pbstrNetIDArray, object userState) {
            if ((this.DeletePassportsOperationCompleted == null)) {
                this.DeletePassportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePassportsOperationCompleted);
            }
            this.InvokeAsync("DeletePassports", new object[] {
                        pbstrNetIDArray}, this.DeletePassportsOperationCompleted, userState);
        }
        
        private void OnDeletePassportsOperationCompleted(object arg) {
            if ((this.DeletePassportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePassportsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetIdentityInfo", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pbstrXML")]
        public string GetIdentityInfo(tagPASSID PassIDIn, string bstrCredAttribList, string bstrProfileAttribList, string bstrOptionalParams) {
            object[] results = this.Invoke("GetIdentityInfo", new object[] {
                        PassIDIn,
                        bstrCredAttribList,
                        bstrProfileAttribList,
                        bstrOptionalParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetIdentityInfo(tagPASSID PassIDIn, string bstrCredAttribList, string bstrProfileAttribList, string bstrOptionalParams, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetIdentityInfo", new object[] {
                        PassIDIn,
                        bstrCredAttribList,
                        bstrProfileAttribList,
                        bstrOptionalParams}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetIdentityInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIdentityInfoAsync(tagPASSID PassIDIn, string bstrCredAttribList, string bstrProfileAttribList, string bstrOptionalParams) {
            this.GetIdentityInfoAsync(PassIDIn, bstrCredAttribList, bstrProfileAttribList, bstrOptionalParams, null);
        }
        
        /// <remarks/>
        public void GetIdentityInfoAsync(tagPASSID PassIDIn, string bstrCredAttribList, string bstrProfileAttribList, string bstrOptionalParams, object userState) {
            if ((this.GetIdentityInfoOperationCompleted == null)) {
                this.GetIdentityInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIdentityInfoOperationCompleted);
            }
            this.InvokeAsync("GetIdentityInfo", new object[] {
                        PassIDIn,
                        bstrCredAttribList,
                        bstrProfileAttribList,
                        bstrOptionalParams}, this.GetIdentityInfoOperationCompleted, userState);
        }
        
        private void OnGetIdentityInfoOperationCompleted(object arg) {
            if ((this.GetIdentityInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIdentityInfoCompleted(this, new GetIdentityInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UpdateUserAppConsent", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pbstrResultXML")]
        public string UpdateUserAppConsent(tagPASSID passID, string bstrAppPermissionXML) {
            object[] results = this.Invoke("UpdateUserAppConsent", new object[] {
                        passID,
                        bstrAppPermissionXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateUserAppConsent(tagPASSID passID, string bstrAppPermissionXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateUserAppConsent", new object[] {
                        passID,
                        bstrAppPermissionXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateUserAppConsent(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAppConsentAsync(tagPASSID passID, string bstrAppPermissionXML) {
            this.UpdateUserAppConsentAsync(passID, bstrAppPermissionXML, null);
        }
        
        /// <remarks/>
        public void UpdateUserAppConsentAsync(tagPASSID passID, string bstrAppPermissionXML, object userState) {
            if ((this.UpdateUserAppConsentOperationCompleted == null)) {
                this.UpdateUserAppConsentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAppConsentOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAppConsent", new object[] {
                        passID,
                        bstrAppPermissionXML}, this.UpdateUserAppConsentOperationCompleted, userState);
        }
        
        private void OnUpdateUserAppConsentOperationCompleted(object arg) {
            if ((this.UpdateUserAppConsentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAppConsentCompleted(this, new UpdateUserAppConsentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#EnumerateAppPermissions", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pbstrAppPermissionXML")]
        public string EnumerateAppPermissions(tagPASSID passID, string bstrFilterXML) {
            object[] results = this.Invoke("EnumerateAppPermissions", new object[] {
                        passID,
                        bstrFilterXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnumerateAppPermissions(tagPASSID passID, string bstrFilterXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnumerateAppPermissions", new object[] {
                        passID,
                        bstrFilterXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndEnumerateAppPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateAppPermissionsAsync(tagPASSID passID, string bstrFilterXML) {
            this.EnumerateAppPermissionsAsync(passID, bstrFilterXML, null);
        }
        
        /// <remarks/>
        public void EnumerateAppPermissionsAsync(tagPASSID passID, string bstrFilterXML, object userState) {
            if ((this.EnumerateAppPermissionsOperationCompleted == null)) {
                this.EnumerateAppPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateAppPermissionsOperationCompleted);
            }
            this.InvokeAsync("EnumerateAppPermissions", new object[] {
                        passID,
                        bstrFilterXML}, this.EnumerateAppPermissionsOperationCompleted, userState);
        }
        
        private void OnEnumerateAppPermissionsOperationCompleted(object arg) {
            if ((this.EnumerateAppPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateAppPermissionsCompleted(this, new EnumerateAppPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetDelegationToken", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pbstrAppPermissionXML")]
        public string GetDelegationToken(tagPASSID passID, string bstrFilterXML) {
            object[] results = this.Invoke("GetDelegationToken", new object[] {
                        passID,
                        bstrFilterXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDelegationToken(tagPASSID passID, string bstrFilterXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDelegationToken", new object[] {
                        passID,
                        bstrFilterXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDelegationToken(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDelegationTokenAsync(tagPASSID passID, string bstrFilterXML) {
            this.GetDelegationTokenAsync(passID, bstrFilterXML, null);
        }
        
        /// <remarks/>
        public void GetDelegationTokenAsync(tagPASSID passID, string bstrFilterXML, object userState) {
            if ((this.GetDelegationTokenOperationCompleted == null)) {
                this.GetDelegationTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDelegationTokenOperationCompleted);
            }
            this.InvokeAsync("GetDelegationToken", new object[] {
                        passID,
                        bstrFilterXML}, this.GetDelegationTokenOperationCompleted, userState);
        }
        
        private void OnGetDelegationTokenOperationCompleted(object arg) {
            if ((this.GetDelegationTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDelegationTokenCompleted(this, new GetDelegationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ReservePassports", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ppbstrReservedAccountsArray", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] ReservePassports([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] pbstrAccountXMLArray, eTRANSACTION etFlags, out string pbstrErrorBlob) {
            object[] results = this.Invoke("ReservePassports", new object[] {
                        pbstrAccountXMLArray,
                        etFlags});
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReservePassports(string[] pbstrAccountXMLArray, eTRANSACTION etFlags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReservePassports", new object[] {
                        pbstrAccountXMLArray,
                        etFlags}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndReservePassports(System.IAsyncResult asyncResult, out string pbstrErrorBlob) {
            object[] results = this.EndInvoke(asyncResult);
            pbstrErrorBlob = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReservePassportsAsync(string[] pbstrAccountXMLArray, eTRANSACTION etFlags) {
            this.ReservePassportsAsync(pbstrAccountXMLArray, etFlags, null);
        }
        
        /// <remarks/>
        public void ReservePassportsAsync(string[] pbstrAccountXMLArray, eTRANSACTION etFlags, object userState) {
            if ((this.ReservePassportsOperationCompleted == null)) {
                this.ReservePassportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReservePassportsOperationCompleted);
            }
            this.InvokeAsync("ReservePassports", new object[] {
                        pbstrAccountXMLArray,
                        etFlags}, this.ReservePassportsOperationCompleted, userState);
        }
        
        private void OnReservePassportsOperationCompleted(object arg) {
            if ((this.ReservePassportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReservePassportsCompleted(this, new ReservePassportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GenerateOneTimeToken", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("bstrOneTimeToken")]
        public string GenerateOneTimeToken(tagPASSID PassID, string bstrGenerateOneTimeTokenXML) {
            object[] results = this.Invoke("GenerateOneTimeToken", new object[] {
                        PassID,
                        bstrGenerateOneTimeTokenXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGenerateOneTimeToken(tagPASSID PassID, string bstrGenerateOneTimeTokenXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GenerateOneTimeToken", new object[] {
                        PassID,
                        bstrGenerateOneTimeTokenXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGenerateOneTimeToken(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateOneTimeTokenAsync(tagPASSID PassID, string bstrGenerateOneTimeTokenXML) {
            this.GenerateOneTimeTokenAsync(PassID, bstrGenerateOneTimeTokenXML, null);
        }
        
        /// <remarks/>
        public void GenerateOneTimeTokenAsync(tagPASSID PassID, string bstrGenerateOneTimeTokenXML, object userState) {
            if ((this.GenerateOneTimeTokenOperationCompleted == null)) {
                this.GenerateOneTimeTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateOneTimeTokenOperationCompleted);
            }
            this.InvokeAsync("GenerateOneTimeToken", new object[] {
                        PassID,
                        bstrGenerateOneTimeTokenXML}, this.GenerateOneTimeTokenOperationCompleted, userState);
        }
        
        private void OnGenerateOneTimeTokenOperationCompleted(object arg) {
            if ((this.GenerateOneTimeTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateOneTimeTokenCompleted(this, new GenerateOneTimeTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SendOneTimeToken", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("bstrSendOneTimeTokenResultXML")]
        public string SendOneTimeToken(tagPASSID PassID, string bstrSendOneTimeTokenXML) {
            object[] results = this.Invoke("SendOneTimeToken", new object[] {
                        PassID,
                        bstrSendOneTimeTokenXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendOneTimeToken(tagPASSID PassID, string bstrSendOneTimeTokenXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendOneTimeToken", new object[] {
                        PassID,
                        bstrSendOneTimeTokenXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSendOneTimeToken(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendOneTimeTokenAsync(tagPASSID PassID, string bstrSendOneTimeTokenXML) {
            this.SendOneTimeTokenAsync(PassID, bstrSendOneTimeTokenXML, null);
        }
        
        /// <remarks/>
        public void SendOneTimeTokenAsync(tagPASSID PassID, string bstrSendOneTimeTokenXML, object userState) {
            if ((this.SendOneTimeTokenOperationCompleted == null)) {
                this.SendOneTimeTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOneTimeTokenOperationCompleted);
            }
            this.InvokeAsync("SendOneTimeToken", new object[] {
                        PassID,
                        bstrSendOneTimeTokenXML}, this.SendOneTimeTokenOperationCompleted, userState);
        }
        
        private void OnSendOneTimeTokenOperationCompleted(object arg) {
            if ((this.SendOneTimeTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOneTimeTokenCompleted(this, new SendOneTimeTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ConsumeOneTimeToken", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConsumeOneTimeToken(tagPASSID PassID, string bstrOneTimeToken, string bstrConsumeOneTimeTokenXML) {
            this.Invoke("ConsumeOneTimeToken", new object[] {
                        PassID,
                        bstrOneTimeToken,
                        bstrConsumeOneTimeTokenXML});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConsumeOneTimeToken(tagPASSID PassID, string bstrOneTimeToken, string bstrConsumeOneTimeTokenXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConsumeOneTimeToken", new object[] {
                        PassID,
                        bstrOneTimeToken,
                        bstrConsumeOneTimeTokenXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndConsumeOneTimeToken(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ConsumeOneTimeTokenAsync(tagPASSID PassID, string bstrOneTimeToken, string bstrConsumeOneTimeTokenXML) {
            this.ConsumeOneTimeTokenAsync(PassID, bstrOneTimeToken, bstrConsumeOneTimeTokenXML, null);
        }
        
        /// <remarks/>
        public void ConsumeOneTimeTokenAsync(tagPASSID PassID, string bstrOneTimeToken, string bstrConsumeOneTimeTokenXML, object userState) {
            if ((this.ConsumeOneTimeTokenOperationCompleted == null)) {
                this.ConsumeOneTimeTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsumeOneTimeTokenOperationCompleted);
            }
            this.InvokeAsync("ConsumeOneTimeToken", new object[] {
                        PassID,
                        bstrOneTimeToken,
                        bstrConsumeOneTimeTokenXML}, this.ConsumeOneTimeTokenOperationCompleted, userState);
        }
        
        private void OnConsumeOneTimeTokenOperationCompleted(object arg) {
            if ((this.ConsumeOneTimeTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsumeOneTimeTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#BatchSendOneTimeToken", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("bstrSendBatchOneTimeTokenResultXML")]
        public string BatchSendOneTimeToken(tagPASSID PassID, string bstrSendBatchOneTimeTokenXML) {
            object[] results = this.Invoke("BatchSendOneTimeToken", new object[] {
                        PassID,
                        bstrSendBatchOneTimeTokenXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBatchSendOneTimeToken(tagPASSID PassID, string bstrSendBatchOneTimeTokenXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BatchSendOneTimeToken", new object[] {
                        PassID,
                        bstrSendBatchOneTimeTokenXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndBatchSendOneTimeToken(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchSendOneTimeTokenAsync(tagPASSID PassID, string bstrSendBatchOneTimeTokenXML) {
            this.BatchSendOneTimeTokenAsync(PassID, bstrSendBatchOneTimeTokenXML, null);
        }
        
        /// <remarks/>
        public void BatchSendOneTimeTokenAsync(tagPASSID PassID, string bstrSendBatchOneTimeTokenXML, object userState) {
            if ((this.BatchSendOneTimeTokenOperationCompleted == null)) {
                this.BatchSendOneTimeTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchSendOneTimeTokenOperationCompleted);
            }
            this.InvokeAsync("BatchSendOneTimeToken", new object[] {
                        PassID,
                        bstrSendBatchOneTimeTokenXML}, this.BatchSendOneTimeTokenOperationCompleted, userState);
        }
        
        private void OnBatchSendOneTimeTokenOperationCompleted(object arg) {
            if ((this.BatchSendOneTimeTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchSendOneTimeTokenCompleted(this, new BatchSendOneTimeTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SetPreferredDogfoodState", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPreferredDogfoodState(string bstrNetID, string fOptInForDogfood) {
            this.Invoke("SetPreferredDogfoodState", new object[] {
                        bstrNetID,
                        fOptInForDogfood});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPreferredDogfoodState(string bstrNetID, string fOptInForDogfood, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPreferredDogfoodState", new object[] {
                        bstrNetID,
                        fOptInForDogfood}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetPreferredDogfoodState(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetPreferredDogfoodStateAsync(string bstrNetID, string fOptInForDogfood) {
            this.SetPreferredDogfoodStateAsync(bstrNetID, fOptInForDogfood, null);
        }
        
        /// <remarks/>
        public void SetPreferredDogfoodStateAsync(string bstrNetID, string fOptInForDogfood, object userState) {
            if ((this.SetPreferredDogfoodStateOperationCompleted == null)) {
                this.SetPreferredDogfoodStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPreferredDogfoodStateOperationCompleted);
            }
            this.InvokeAsync("SetPreferredDogfoodState", new object[] {
                        bstrNetID,
                        fOptInForDogfood}, this.SetPreferredDogfoodStateOperationCompleted, userState);
        }
        
        private void OnSetPreferredDogfoodStateOperationCompleted(object arg) {
            if ((this.SetPreferredDogfoodStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPreferredDogfoodStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#AddToFamily", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pbstrAddToFamilyResultXML")]
        public string AddToFamily(string bstrAddToFamilyXML) {
            object[] results = this.Invoke("AddToFamily", new object[] {
                        bstrAddToFamilyXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddToFamily(string bstrAddToFamilyXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddToFamily", new object[] {
                        bstrAddToFamilyXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddToFamily(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddToFamilyAsync(string bstrAddToFamilyXML) {
            this.AddToFamilyAsync(bstrAddToFamilyXML, null);
        }
        
        /// <remarks/>
        public void AddToFamilyAsync(string bstrAddToFamilyXML, object userState) {
            if ((this.AddToFamilyOperationCompleted == null)) {
                this.AddToFamilyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToFamilyOperationCompleted);
            }
            this.InvokeAsync("AddToFamily", new object[] {
                        bstrAddToFamilyXML}, this.AddToFamilyOperationCompleted, userState);
        }
        
        private void OnAddToFamilyOperationCompleted(object arg) {
            if ((this.AddToFamilyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToFamilyCompleted(this, new AddToFamilyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#RemoveFromFamily", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pbstrRemoveFromFamilyResultXML")]
        public string RemoveFromFamily(string bstrRemoveFromFamilyXML) {
            object[] results = this.Invoke("RemoveFromFamily", new object[] {
                        bstrRemoveFromFamilyXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveFromFamily(string bstrRemoveFromFamilyXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveFromFamily", new object[] {
                        bstrRemoveFromFamilyXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRemoveFromFamily(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFromFamilyAsync(string bstrRemoveFromFamilyXML) {
            this.RemoveFromFamilyAsync(bstrRemoveFromFamilyXML, null);
        }
        
        /// <remarks/>
        public void RemoveFromFamilyAsync(string bstrRemoveFromFamilyXML, object userState) {
            if ((this.RemoveFromFamilyOperationCompleted == null)) {
                this.RemoveFromFamilyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromFamilyOperationCompleted);
            }
            this.InvokeAsync("RemoveFromFamily", new object[] {
                        bstrRemoveFromFamilyXML}, this.RemoveFromFamilyOperationCompleted, userState);
        }
        
        private void OnRemoveFromFamilyOperationCompleted(object arg) {
            if ((this.RemoveFromFamilyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromFamilyCompleted(this, new RemoveFromFamilyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PPSoapHeader")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSSecurityHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UpdateMembership", RequestNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", ResponseNamespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pbstrUpdateMembershipResultXML")]
        public string UpdateMembership(string bstrUpdateMembershipXML) {
            object[] results = this.Invoke("UpdateMembership", new object[] {
                        bstrUpdateMembershipXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateMembership(string bstrUpdateMembershipXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateMembership", new object[] {
                        bstrUpdateMembershipXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateMembership(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMembershipAsync(string bstrUpdateMembershipXML) {
            this.UpdateMembershipAsync(bstrUpdateMembershipXML, null);
        }
        
        /// <remarks/>
        public void UpdateMembershipAsync(string bstrUpdateMembershipXML, object userState) {
            if ((this.UpdateMembershipOperationCompleted == null)) {
                this.UpdateMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMembershipOperationCompleted);
            }
            this.InvokeAsync("UpdateMembership", new object[] {
                        bstrUpdateMembershipXML}, this.UpdateMembershipOperationCompleted, userState);
        }
        
        private void OnUpdateMembershipOperationCompleted(object arg) {
            if ((this.UpdateMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMembershipCompleted(this, new UpdateMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1")]
    [System.Xml.Serialization.XmlRootAttribute("PPSoapHeader", Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", IsNullable=false)]
    public partial class PPSoapHeader_wrapper : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1")]
    [System.Xml.Serialization.XmlRootAttribute("WSSecurityHeader", Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1", IsNullable=false)]
    public partial class tagWSSECURITYHEADER : System.Web.Services.Protocols.SoapHeader {
        
        private EnumSHVersion versionField;
        
        private string wssecurityField;
        
        private string authorizationField;
        
        private string sitetokenField;
        
        private string ppSoapHeader25Field;
        
        private string auditInfoField;
        
        private string delegateField;
        
        private string originatorField;
        
        private string clientipField;
        
        private string clientOSField;
        
        private string clientUserAgentField;
        
        private string uiFlavorField;
        
        /// <remarks/>
        public EnumSHVersion version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string wssecurity {
            get {
                return this.wssecurityField;
            }
            set {
                this.wssecurityField = value;
            }
        }
        
        /// <remarks/>
        public string authorization {
            get {
                return this.authorizationField;
            }
            set {
                this.authorizationField = value;
            }
        }
        
        /// <remarks/>
        public string sitetoken {
            get {
                return this.sitetokenField;
            }
            set {
                this.sitetokenField = value;
            }
        }
        
        /// <remarks/>
        public string ppSoapHeader25 {
            get {
                return this.ppSoapHeader25Field;
            }
            set {
                this.ppSoapHeader25Field = value;
            }
        }
        
        /// <remarks/>
        public string auditInfo {
            get {
                return this.auditInfoField;
            }
            set {
                this.auditInfoField = value;
            }
        }
        
        /// <remarks/>
        public string @delegate {
            get {
                return this.delegateField;
            }
            set {
                this.delegateField = value;
            }
        }
        
        /// <remarks/>
        public string originator {
            get {
                return this.originatorField;
            }
            set {
                this.originatorField = value;
            }
        }
        
        /// <remarks/>
        public string clientip {
            get {
                return this.clientipField;
            }
            set {
                this.clientipField = value;
            }
        }
        
        /// <remarks/>
        public string clientOS {
            get {
                return this.clientOSField;
            }
            set {
                this.clientOSField = value;
            }
        }
        
        /// <remarks/>
        public string clientUserAgent {
            get {
                return this.clientUserAgentField;
            }
            set {
                this.clientUserAgentField = value;
            }
        }
        
        /// <remarks/>
        public string uiFlavor {
            get {
                return this.uiFlavorField;
            }
            set {
                this.uiFlavorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1")]
    public enum EnumSHVersion {
        
        /// <remarks/>
        eshHeader30,
        
        /// <remarks/>
        eshHeader25,
        
        /// <remarks/>
        eshNone,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1")]
    public partial class tagPASSID {
        
        private PASSIDTYPE pitField;
        
        private string bstrIDField;
        
        /// <remarks/>
        public PASSIDTYPE pit {
            get {
                return this.pitField;
            }
            set {
                this.pitField = value;
            }
        }
        
        /// <remarks/>
        public string bstrID {
            get {
                return this.bstrIDField;
            }
            set {
                this.bstrIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1")]
    public enum PASSIDTYPE {
        
        /// <remarks/>
        PASSID_AUID,
        
        /// <remarks/>
        PASSID_ALIASNAME,
        
        /// <remarks/>
        PASSID_PUID_SIGNINNAME,
        
        /// <remarks/>
        PASSID_ROLEID,
        
        /// <remarks/>
        PASSID_PPSACREDENTIALID,
        
        /// <remarks/>
        PASSID_NULL,
        
        /// <remarks/>
        PASSID_PUID,
        
        /// <remarks/>
        PASSID_SIGNINNAME,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/Passport/SoapServices/ProfileServiceAPI/V1")]
    public enum eTRANSACTION {
        
        /// <remarks/>
        TX_MAX,
        
        /// <remarks/>
        TX_ROLLBACK_NONE,
        
        /// <remarks/>
        TX_ROLLBACK_ACCOUNT,
        
        /// <remarks/>
        TX_ROLLBACK_ALL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void CreateProfileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void CreatePassportsCompletedEventHandler(object sender, CreatePassportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePassportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePassportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrErrorBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UpdatePassportsCompletedEventHandler(object sender, UpdatePassportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePassportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePassportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrErrorBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetProfileByAttributesCompletedEventHandler(object sender, GetProfileByAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileByAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileByAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrErrorBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetProfileByXPathCompletedEventHandler(object sender, GetProfileByXPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileByXPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileByXPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrErrorBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UpdateProfileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UpdateProfileExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DeleteProfileWCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void DeletePassportsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetIdentityInfoCompletedEventHandler(object sender, GetIdentityInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIdentityInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIdentityInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UpdateUserAppConsentCompletedEventHandler(object sender, UpdateUserAppConsentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserAppConsentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserAppConsentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void EnumerateAppPermissionsCompletedEventHandler(object sender, EnumerateAppPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateAppPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateAppPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetDelegationTokenCompletedEventHandler(object sender, GetDelegationTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDelegationTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDelegationTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void ReservePassportsCompletedEventHandler(object sender, ReservePassportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReservePassportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReservePassportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrErrorBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GenerateOneTimeTokenCompletedEventHandler(object sender, GenerateOneTimeTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateOneTimeTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateOneTimeTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void SendOneTimeTokenCompletedEventHandler(object sender, SendOneTimeTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOneTimeTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOneTimeTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void ConsumeOneTimeTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void BatchSendOneTimeTokenCompletedEventHandler(object sender, BatchSendOneTimeTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchSendOneTimeTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchSendOneTimeTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void SetPreferredDogfoodStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void AddToFamilyCompletedEventHandler(object sender, AddToFamilyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToFamilyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToFamilyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void RemoveFromFamilyCompletedEventHandler(object sender, RemoveFromFamilyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFromFamilyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFromFamilyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UpdateMembershipCompletedEventHandler(object sender, UpdateMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
