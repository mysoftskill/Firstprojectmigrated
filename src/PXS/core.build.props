<!--
    This file is imported from dotnet standard csproj's
-->

<Project>
    <PropertyGroup>
        <Platforms>x64</Platforms>

        <!-- Force x64! -->
        <Prefer32Bit>false</Prefer32Bit>
        <Platform>x64</Platform>

        <DebugType>Full</DebugType>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
        <EnlistmentRoot>$(MSBuildThisFileDirectory)</EnlistmentRoot>
        <EnlistmentRoot>$(EnlistmentRoot.TrimEnd('\\'))</EnlistmentRoot>
        <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(MSBuildThisFileDirectory)</SolutionDir>
        <OutputPath>$(EnlistmentRoot)\Bin\$(Configuration)\$(Platform)\$(MSBuildProjectName)\</OutputPath>
        <OutDir>$(OutputPath)</OutDir>
        <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
        <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>

        <RuntimeIdentifier>win7-x64</RuntimeIdentifier>
        <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    </PropertyGroup>
    
    <!-- Set Release and symbol paths.  Not allowed to override release and symbol paths -->
    <PropertyGroup>
        <_BaseReleasePath>$(EnlistmentRoot)\Bin\$(Configuration)\$(Platform)</_BaseReleasePath>
        <BaseReleasePath>$(_BaseReleasePath)</BaseReleasePath>
        <ReleaseRoot>$(BaseReleasePath)</ReleaseRoot>
        <ReleasePath>$(ReleaseRoot)</ReleasePath>
        <!-- A boolean value that indicates whether symbols are generated by the build. -->
        <DebugSymbols>true</DebugSymbols>
        <ProductBuildPath>$(EnlistmentRoot)\Product\Build\</ProductBuildPath>
        <!-- Copy all files to the ReleasePath -->
        <CopyFilesToReleasePathEnabled Condition="'$(CopyFilesToReleasePathEnabled)' == ''">false</CopyFilesToReleasePathEnabled>
    </PropertyGroup>
    
    <!-- Defines the level of debug information that you want generated. Valid values are "full," "pdbonly," and "none." -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <DebugType>Full</DebugType>
    </PropertyGroup>
    
    <!-- A boolean value that when set to true, enables compiler optimizations. This property is equivalent to the /optimize compiler switch. -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
    </PropertyGroup>
    
    <PropertyGroup>
      <StyleCopEnabled>false</StyleCopEnabled>
    </PropertyGroup>

    <PropertyGroup>
        <ServiceName>MemberServices</ServiceName>
        <MemberServicesAssemblyRoot>Microsoft.Membership.MemberServices</MemberServicesAssemblyRoot>
        <MemberServiceAreaPath>MEE\MemberServices</MemberServiceAreaPath>
        <MemberServicesRoot>$(EnlistmentRoot)\Product</MemberServicesRoot>
        <AssemblyOriginatorKeyFile>$(MemberServicesRoot)\Build\InternalKey.snk</AssemblyOriginatorKeyFile>

        <!-- .net core specific settings -->
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        
        <CodeAnalysisIgnoreGeneratedCode>true</CodeAnalysisIgnoreGeneratedCode>
        <NoWarn>$(NoWarn);1591</NoWarn>

        <InternalsVisisibleToUnitTests>true</InternalsVisisibleToUnitTests>
    </PropertyGroup>
</Project>