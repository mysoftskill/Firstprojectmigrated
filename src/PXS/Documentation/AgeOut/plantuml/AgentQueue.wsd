@startuml AgentStorage

node MSA

node AQS {
    folder "Account Notifications" {
        database CloseNotifications
    }
}

node MSARVS

node "NGP Components" {
    component AqsWorker #SeaGreen

    node PCF #SeaGreen

    cloud "Cosmos" {
        database RawSignalStream
        database RawAgeOutStream #SeaGreen
        database CookedSignalStream
        database CookedAgeOutStream #SeaGreen
    }

    folder "Agent Azure Queues" {
        database AgentAzureQueues #SeaGreen
    }

}

node Xbox

cloud "Agents" {
    node DeleteAgents #SeaGreen
}

cloud "Cosmos Agents" {
    node CosmosDeleteAgents
}

MSA -> CloseNotifications : Add account close event
MSA -> CloseNotifications : Add age out event

CloseNotifications --> AqsWorker : Batch dequeue of account close events

Xbox --> AqsWorker : Get Xuids for closed accounts using batch API
MSARVS --> AqsWorker : Exchange pre verifier for verifier

AqsWorker --> PCF : Send age outs and account closes

PCF <--> AgentAzureQueues : Enqueue, dequeue, update, and delete age out commands

PCF --> DeleteAgents : Send commands to applicable non cosmos agents

PCF --> RawSignalStream : Write account close signal stream
PCF --> RawAgeOutStream : Write age out signals stream separate from other signals

RawSignalStream --> CookedSignalStream : "Cook" signals into structured stream for cosmos agents
RawAgeOutStream --> CookedAgeOutStream : "Cook" age out signals into structured stream for cosmos agents

CookedSignalStream --> CosmosDeleteAgents : Agents consume regular delete signals
CookedAgeOutStream --> CosmosDeleteAgents : Agents consume age out signals if applicable

legend
    |= |= Type |
    |<back:SeaGreen>   </back>| Updated |
    |<back:LightYellow>   </back>| No Change |
endlegend

@enduml
