// <auto-generated/>
namespace Microsoft.PrivacyServices.DataManagement.DataAccess.Kusto
{
    using System.Collections.Generic;
    using System.Diagnostics.CodeAnalysis;

    using Newtonsoft.Json;

    /// <summary>
    ///     Class for Response. 
    ///     Refer to https://docs.microsoft.com/en-us/azure/kusto/api/rest/response2 for complete information on response. 
    /// </summary>
    [ExcludeFromCodeCoverage]
    public class KustoResponse
    {
        /// <summary>
        ///     From the json.
        /// </summary>
        /// <param name="json">The json.</param>
        /// <returns>List&lt;KustoResponse&gt;.</returns>
        public static List<KustoResponse> FromJson(string json)
        {
            return JsonConvert.DeserializeObject<List<KustoResponse>>(json);
        }

        /// <summary>
        ///     To Json.
        /// </summary>
        /// <param name="response">The KustoResponse object.</param>
        /// <returns>Json string.</returns>
        public static string ToJson(KustoResponse response)
        {
            return JsonConvert.SerializeObject(response);
        }

        /// <summary>
        ///     Gets or Sets Cancelled.
        /// </summary>
        /// <value><c>null</c> if [cancelled] contains no value, <c>true</c> if [cancelled]; otherwise, <c>false</c>.</value>
        [JsonProperty("Cancelled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cancelled { get; set; }

        /// <summary>
        ///     Gets or Sets Columns.
        /// </summary>
        /// <value>The columns.</value>
        [JsonProperty("Columns", NullValueHandling = NullValueHandling.Ignore)]
        public List<Column> Columns { get; set; }

        /// <summary>
        ///     Gets or Sets Frame Type.
        /// </summary>
        /// <value>The type of the frame.</value>
        [JsonProperty("FrameType")]
        public string FrameType { get; set; }

        /// <summary>
        ///     Gets or Sets Has Errors.
        /// </summary>
        /// <value><c>null</c> if [has errors] contains no value, <c>true</c> if [has errors]; otherwise, <c>false</c>.</value>
        [JsonProperty("HasErrors", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HasErrors { get; set; }

        /// <summary>
        ///     Gets or Sets Is Progressive.
        /// </summary>
        /// <value><c>null</c> if [is progressive] contains no value, <c>true</c> if [is progressive]; otherwise, <c>false</c>.</value>
        [JsonProperty("IsProgressive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsProgressive { get; set; }

        /// <summary>
        ///     Gets or Sets Rows.
        /// </summary>
        /// <value>The rows.</value>
        [JsonProperty("Rows", NullValueHandling = NullValueHandling.Ignore)]
        public List<List<object>> Rows { get; set; }

        /// <summary>
        ///     Gets or Sets Table Id.
        /// </summary>
        /// <value>The table identifier.</value>
        [JsonProperty("TableId", NullValueHandling = NullValueHandling.Ignore)]
        public long? TableId { get; set; }

        /// <summary>
        ///     Gets or Sets Table Kind.
        /// </summary>
        /// <value>The kind of the table.</value>
        [JsonProperty("TableKind", NullValueHandling = NullValueHandling.Ignore)]
        public string TableKind { get; set; }

        /// <summary>
        ///     Gets or Sets Table Name.
        /// </summary>
        /// <value>The name of the table.</value>
        [JsonProperty("TableName", NullValueHandling = NullValueHandling.Ignore)]
        public string TableName { get; set; }

        /// <summary>
        ///     Gets or Sets Version.
        /// </summary>
        /// <value>The version.</value>
        [JsonProperty("Version", NullValueHandling = NullValueHandling.Ignore)]
        public string Version { get; set; }
    }

    /// <summary>
    ///     Column.
    /// </summary>
    [ExcludeFromCodeCoverage]
    public class Column
    {
        /// <summary>
        ///     Gets or Sets Column Name.
        /// </summary>
        /// <value>The name of the column.</value>
        [JsonProperty("ColumnName")]
        public string ColumnName { get; set; }

        /// <summary>
        ///     Gets or Sets Column Type.
        /// </summary>
        /// <value>The type of the column.</value>
        [JsonProperty("ColumnType")]
        public string ColumnType { get; set; }
    }
}
