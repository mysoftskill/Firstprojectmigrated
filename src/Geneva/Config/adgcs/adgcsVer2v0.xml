<MonitoringManagement namespace="adgcs" timestamp="2020-10-05T00:00:00Z" version="1.0" eventVersion="2">
  <Imports>
    <!-- Imports documentation: https://jarvis.dc.ad.msft.net/?page=documents&section=9c95f4eb-8689-4c9f-81bf-82d688e860fd&id=15b0c8c4-c82f-4659-a4c8-52f153879a03   -->
    <!-- You can import other files.  The AgentStandardEvents.xml emits metrics about the agent -->
    <Import file="AgentStandardEvents.xml" />
    <Import file="ServiceFabricEvents.xml" />
    <Import file="AzureSecurityPackMds.xml" />
    <Import file="PCD.Frontdoor$PCF.Frontdoor$PCF.Worker$PDMS.Frontdoor$PXS.Frontdoor$PXS.Worker.xml" />
  </Imports>
  <Accounts>
    <Account moniker="adgcsaudit" alias="AuditStore" />
    <Account moniker="adgcsdiag" isDefault="true" />
    <Account moniker="adgcssecurity" alias="AzSecurityStore" />
  </Accounts>
  <!-- Management documentation: https://jarvis.dc.ad.msft.net/?page=documents&section=9c95f4eb-8689-4c9f-81bf-82d688e860fd&id=8794f47e-d1b2-4538-8f31-839c41c1710a  -->
  <Management onDemandRequests="true" defaultRetentionInDays="29" eventVolume="Medium">
    <!--
      The identity TenantRole means MONITORING_IDENTITY, MONITORING_ROLE, and MONITORING_ROLE_INSTANCE will
      uniquely identify any of your instances
    -->
    <Identity tenantNameAlias="Environment">
      <IdentityComponent name="Environment">GetEnvironmentVariable("MONITORING_TENANT")</IdentityComponent>
      <IdentityComponent name="DataCenter">GetEnvironmentVariable("MONITORING_DATACENTER")</IdentityComponent>
      <IdentityComponent name="Role">GetEnvironmentVariable("MONITORING_ROLE")</IdentityComponent>
      <IdentityComponent name="RoleInstance">GetEnvironmentVariable("MONITORING_ROLE_INSTANCE")</IdentityComponent>
    </Identity>
    <!--
      The diskQuotaInMB is a required parameter.  For 10,000 MB there should be 15,000 MB available on the disk  The CPU, memory and network can also be limited in the
      AgentResourceUsage element's attributes.
    -->
    <AgentResourceUsage cpuPercentUsage="20" diskQuotaInMB="10000" />
    <AgentMetrics mdmMonitoringAccount="adgcsprod" />
  </Management>
  <Sources>
    <Source type="Pipe" name="RequestTelemetry" streamName="SLLTelemetryIn" duration="PT60S" storeType="CentralBond" />
    <Source type="Pipe" name="CommandSentToAgentEvents" streamName="SLLTelemetryIn" duration="PT60S" storeType="CentralBond" />
    <Source type="Pipe" name="CustomEvents" streamName="SLLTelemetryIn" duration="PT60S" storeType="CentralBond" />
    <Source type="Pipe" name="SQExtensionLogs" streamName="SQEDiagnosticsIn" duration="PT60S" storeType="CentralBond" />
  </Sources>
  <!-- Events documentation: https://jarvis.dc.ad.msft.net/?page=documents&section=9c95f4eb-8689-4c9f-81bf-82d688e860fd&id=ac0084ad-5065-4b16-8f7d-0a5193143378   -->
  <!--
      Events can contain one or more Event elements.  The Event elements each describe a different kind of collector.
      Events must be defined in the order of the mds2.xsd.
    -->
  <Events>
    <EventDeclarations storeType="CentralBond">
      <Declaration storeType="CentralBond" eventName="RequestTelemetry" />
      <Declaration storeType="CentralBond" eventName="CommandSentToAgentEvents" />
      <Declaration storeType="CentralBond" eventName="CustomEvents" />
      <Declaration storeType="CentralBond" eventName="SQExtensionLogs" />
    </EventDeclarations>
    <CounterSets>
      <CounterSet eventName="SysPerfCounters" sampleRateInSeconds="60" storeType="CentralBond" mdmMonitoringAccount="adgcsprod" mdmNamespace="PerformanceMetrics">
        <MdmDimensions>
          <MdmDimension name="RoleInstance"><![CDATA[GetEnvironmentVariable("MONITORING_ROLE_INSTANCE")]]></MdmDimension>
          <MdmDimension name="Role"><![CDATA[GetEnvironmentVariable("MONITORING_ROLE")]]></MdmDimension>
          <MdmDimension name="Environment"><![CDATA[GetEnvironmentVariable("MONITORING_TENANT")]]></MdmDimension>
        </MdmDimensions>
        <Counter>\Memory\% Committed Bytes In Use</Counter>
        <Counter>\Processor(_Total)\% Processor Time</Counter>
        <Counter>\Process(Pcf.Worker)\% Processor Time</Counter>
        <Counter>\Process(StandingQueryExtension)\% Processor Time</Counter>
        <Counter>\LogicalDisk(*)\Free Megabytes</Counter>
      </CounterSet>
    </CounterSets>
    <CrashDumpMonitor>
      <CrashDumpItem storeType="CentralBond" eventName="CrashDumpEvent" useAzureWatson="true">
        <ProcessList>
          <Process>[All]</Process>
        </ProcessList>
      </CrashDumpItem>
    </CrashDumpMonitor>
    <IfxEvents sessionName="AdgcsSesssion">
      <Event id="Ifx.PartASchema/Ifx.BaseOperationSchema/Ifx.OperationSchema" storeType="Local" eventName="IfxOperationEvent" />
      <Event id="Ifx.TracePartASchema/Ifx.TraceSchema" storeType="CentralBond" eventName="IfxTraceEvent" />
      <Event id="Ifx.EtwAuditSchemaApplication" storeType="CentralBond" eventName="IfxAuditApplication" />
      <Event id="Ifx.EtwAuditSchemaManagement" storeType="CentralBond" eventName="IfxAuditManagement" />
    </IfxEvents>
    <Extensions>
      <Extension extensionName="MetricsExtension">
        <CommandLine><![CDATA[MetricsExtension.Native.exe]]></CommandLine>
      </Extension>
    </Extensions>
  </Events>
  <EventStreamingAnnotations>
    <EventStreamingAnnotation name="^IfxOperationEvent$">
      <DGrep>
        <Content><![CDATA[]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^IfxTraceEvent$">
      <DGrep>
        <Content><![CDATA[]]></Content>
      </DGrep>
      <LogAnalytics>
        <Content>LogAnalyticsContent</Content>
      </LogAnalytics>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSysAuth$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSysChg$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSysCmd$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSysLogon$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSysAV$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSLALExe$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSLALScr$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSLALApps$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSLALAlerts$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^.*AsmSLCI$">
      <DGrep>
        <Content><![CDATA[<Config />]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^IfxAuditApplication$">
      <DGrep>
        <Content><![CDATA[]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^IfxAuditManagement$">
      <DGrep>
        <Content><![CDATA[]]></Content>
      </DGrep>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^RequestTelemetry$">
      <LogAnalytics>
        <Content>LogAnalyticsContent</Content>
      </LogAnalytics>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="^CommandSentToAgentEvents$">
      <LogAnalytics>
        <Content>LogAnalyticsContent</Content>
      </LogAnalytics>
    </EventStreamingAnnotation>
  </EventStreamingAnnotations>
  <EnvelopeSchema>
    <Field name="AppVer">"My_AppVer"</Field>
    <Field name="AppId">"My_AppId"</Field>
    <Field name="IKey">"My_IKey"</Field>
    <Extension name="Cloud">
      <Field name="Name">GetEnvironmentVariable("MONITORING_TENANT")</Field>
      <Field name="Role">GetEnvironmentVariable("MONITORING_ROLE")</Field>
      <Field name="RoleVer">"Cloud_RoleVer"</Field>
      <Field name="RoleInstance">GetEnvironmentVariable("MONITORING_ROLE_INSTANCE")</Field>
      <Field name="Environment">GetEnvironmentVariable("MONITORING_GCS_ENVIRONMENT")</Field>
      <Field name="Location">GetEnvironmentVariable("MONITORING_DATACENTER")</Field>
      <Field name="DeploymentUnit">"Cloud_DeploymentUnit"</Field>
    </Extension>
  </EnvelopeSchema>
  <TaggedData name="StandingQueryExtension">
    <Data>
      <Settings>
        <LogSources>
          <Source>
            <!-- Events matching the given predicate are processed according to the rules below -->
            <Predicate><![CDATA[
                @"data.baseType" == "Ms.Qos.IncomingServiceRequest" || @"data.baseType" == "Ms.Qos.OutgoingServiceRequest"
                ]]></Predicate>
            <!-- Indicates which stream (pipe) to use to push data to the MA  -->
            <StreamName>SLLTelemetryIn</StreamName>
            <!-- Indicates the name to tag the event with when pushing it to the MA -->
            <EventName>RequestTelemetry</EventName>
            <!-- Indicates remapping of column names when emitting to MA event stream -->
            <!-- Also sets the max serialization depth to 3 -->
            <ColumnMappings maxDepth="3">
              <ColumnMapping From="data_baseData_cC_" To="data_baseData_cC_" />
              <ColumnMapping From="data_ResponseHeaders_" To="data_ResponseHeaders_" />
              <ColumnMapping From="data_RequestHeaders_" To="data_RequestHeaders_" />
              <ColumnMapping From="data_Moniker_" To="data_Moniker_" />
              <ColumnMapping From="data_Throttled_" To="data_Throttled_" />
              <ColumnMapping From="data_CommandIds_" To="data_CommandIds_" />
              <ColumnMapping From="data_Collection_" To="data_Collection_" />
              <!-- Fields to exclude -->
              <!-- This field is redundant with PackedProperties -->
              <ColumnMapping From="data_Properties_" />
              <!-- AMC FLight info -->
              <ColumnMapping From="data_Flights_" />
            </ColumnMappings>
          </Source>
          <Source>
            <!-- Send PCF CommandFilteredEvents to a separate EventName -->
            <Predicate><![CDATA[
                @"name" == "Microsoft.PrivacyServices.CommandFeed.Service.Instrumentation.CommandFilteredEvent" && @"data.SentToAgent" == "True"
                ]]></Predicate>
            <StreamName>SLLTelemetryIn</StreamName>
            <EventName>CommandSentToAgentEvents</EventName>
            <!-- Also sets the max serialization depth to 3 -->
            <ColumnMappings maxDepth="3">
            </ColumnMappings>
          </Source>
          <Source>
            <StreamName>SLLTelemetryIn</StreamName>
            <EventName>CustomEvents</EventName>
            <!-- Also sets the max serialization depth to 3 -->
            <ColumnMappings maxDepth="3">
            </ColumnMappings>
          </Source>
        </LogSources>
      </Settings>
      <Environment>
        <Roles>
          <Role name="PCF.Frontdoor">
            <Templates>
              <Include name="PCD.Frontdoor$PCF.Frontdoor$PCF.Worker$PDMS.Frontdoor$PXS.Frontdoor$PXS.Worker" />
            </Templates>
          </Role>
          <Role name="PCF.Worker">
            <Templates>
              <Include name="PCD.Frontdoor$PCF.Frontdoor$PCF.Worker$PDMS.Frontdoor$PXS.Frontdoor$PXS.Worker" />
            </Templates>
          </Role>
          <Role name="PXS.Frontdoor">
            <Templates>
              <Include name="PCD.Frontdoor$PCF.Frontdoor$PCF.Worker$PDMS.Frontdoor$PXS.Frontdoor$PXS.Worker" />
            </Templates>
          </Role>
          <Role name="PXS.Worker">
            <Templates>
              <Include name="PCD.Frontdoor$PCF.Frontdoor$PCF.Worker$PDMS.Frontdoor$PXS.Frontdoor$PXS.Worker" />
            </Templates>
          </Role>
          <Role name="PCD.Frontdoor">
            <Templates>
              <Include name="PCD.Frontdoor$PCF.Frontdoor$PCF.Worker$PDMS.Frontdoor$PXS.Frontdoor$PXS.Worker" />
            </Templates>
          </Role>
          <Role name="PDMS.Frontdoor">
            <Templates>
              <Include name="PCD.Frontdoor$PCF.Frontdoor$PCF.Worker$PDMS.Frontdoor$PXS.Frontdoor$PXS.Worker" />
            </Templates>
          </Role>
        </Roles>
      </Environment>
    </Data>
  </TaggedData>
</MonitoringManagement>