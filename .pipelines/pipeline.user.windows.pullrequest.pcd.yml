# For full annotated example, please visit: https://onebranch.visualstudio.com/Pipeline/_wiki/wikis/Pipeline.wiki?pagePath=%2FCDPx%20%252D%20Cross%252DPlatform%20Cloud%20Delivery%20Pipeline%2FUsage%2FPipeline%20Spec%20YAML%20Concepts%2FAnnotated%20Example&wikiVersion=GBwikiMaster&pageId=302
# YAML File Naming: pipeline.user.<os>.<buildtype>.<tag>.<phase>.<config>.<branch>.yml
# https://onebranch.visualstudio.com/Pipeline/_wiki/wikis/Pipeline.wiki?pagePath=%2FCDPx%20%252D%20Cross%252DPlatform%20Cloud%20Delivery%20Pipeline%2FUsage%2FMulti%252DPhase%20and%20Multi%252DConfiguration%20Builds&wikiVersion=GBwikiMaster&pageId=291&anchor=yaml-file-naming

versioning:
  commands:
    - !!defaultcommand
      name: 'Update Version'
      command: 'src\PCD\OneBranch\Build\versioning.cmd'

restore:
  commands:
    - !!defaultcommand
      name: 'Restore Packages'
      command: 'src\PCD\OneBranch\Build\restore.cmd'
    
build:
  commands:
    - !!defaultcommand
      name: 'Build'
      command: 'src\PCD\OneBranch\Build\build.cmd'
      arguments: 'Debug'
    - !!buildcommand
      name: 'Package'
      command: 'src\PCD\OneBranch\Build\package.cmd'
      arguments: 'Debug'
      artifacts:
        - from: 'src\PCD\OneBranch\Release'
          to: 'Ev2'
          include:
            - '**/*'
        - from: 'src\PCD\Product\Source\ux\bin\Debug'
          to: 'intTest'
          include:
            - '**/*'
        - from: 'src\PCD\Product\Source\ux'
          to: 'intTest'
          include:
            - 'gulp-tasks/**/*'
            - 'frontend/**/*'
            - 'CloudTest/**/*'
            - 'wwwroot/**/*'
            - 'gulpfile.js'
            - 'package.json'
            - 'npm-shrinkwrap.json'
            - 'appsettings.json'
            - 'CloudTest/**/*'
        - from: 'src\PCD\Product\Source\ux\CloudTest'
          to: 'intTest'
          include:
            - '.npmrc'
      logs:
        - from: 'src\PCD\OneBranch\Build'
          to: 'Build Logs'
          include:
            - '**/build*.log'

test:
  commands:
    - !!testcommand                               # We are going to run tests and collect back the test results for publishing
      name: 'UnitTests'                                # If your test run does not have a name, this will be used.
      command: 'src\PCD\OneBranch\Build\test.cmd'              # Script that runs tests. 
      fail_on_stderr: true                        # Force pipeline to fail if the task writes to standard error stream; default is true.
      skip_on_developer_box: true                 # If running locally on a developer host instead of the pipeline managed hosts, skip this task. Default is false.
      testresults:                                # Sequence of entries indicating which test results files to collect.
        - title: 'Web Role'                      # Test run title back end 
          configuration: 'Debug'                  # Optional build configuration.
          platform: 'x64'                         # Optional build platform.
          type: 'VSTest'                          # Test engine type. Used by VSTS. Supported values are JUnit, NUnit, VSTest and xUnit.
          include:                                # Sequence of glob patterns indicating which test results file to associate with this test run.
            - 'src\PCD\Product\Source\ux.tests\TestResults\*.trx'      # Include all TRX files under any TestResults folder under the src folder.  

        - title: 'Front End'                      # Test run title. Used by VSTS.
          configuration: 'Debug'                  # Optional build configuration.
          platform: 'x64'                         # Optional build platform.
          type: 'JUnit'                          # Test engine type. Used by VSTS. Supported values are JUnit, NUnit, VSTest and xUnit.
          include:                                # Sequence of glob patterns indicating which test results file to associate with this test run.
            - 'src\PCD\Product\Source\ux\test-reports\unit-tests\**.xml'      # Include all XML files under any unit-tests folder under the src folder.   

static_analysis_options:
  policheck_options:
    disable_tool_scan: true
  moderncop_options:
    disable_tool_scan: true
  binskim_options:
    disable_tool_scan: true