#################################################################################
#                        OneBranch Pipelines - Buddy                            #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none # https://aka.ms/obpipelines/triggers

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:   
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 0
  NUGET_XMLDOC_MODE: none
  REPOROOT: $(Build.SourcesDirectory)
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

#name: 9.1.$(Year:yy)$(DayOfYear).$(CDP_DEFINITION_BUILD_COUNT)

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main
    - repository: self
      type: git
      ref: refs/heads/master

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      sbom:
        enabled: true
      tsa:
        enabled: false
        configFile: $(Build.SourcesDirectory)/.config/tsaoptions.json
      binskim:
        enabled: true
        break: true # always break the build on binskim issues. You can disable it by setting to 'false'
      policheck:
        enabled: true
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      credscan:
        enabled: true
        break: true
        suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      codeql:
        cadence: 0
        compiled: 
          enabled: true
        tsaEnabled: true # See 'Codeql.TSAEnabled' in the Addition Options section below
     

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
        
        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(Build.SourcesDirectory)\src\PDMS\OneBranch\Deployment\drop' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_artifactBaseName: 'drop'
          ob_sdl_codeSignValidation_excludes: -|**\Tests\**;-|**\Debug\**;-|**\nupkgs\**
          ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
          # ob_sdl_suppression_suppressionFile: $(Build.SourcesDirectory)/.gdn/build.nonofficial.gdnsuppress

        steps:

          - task: onebranch.pipeline.version@1 # generates automatic version. For other versioning options check https://aka.ms/obpipelines/versioning
            displayName: 'Setup BuildNumber'
            inputs:
              system: 'RevisionCounter'
              major: '1'
              minor: '1'
              exclude_commit: true

          - task: CmdLine@2
            displayName: 'Update Version'
            inputs:
              script: '$(Build.SourcesDirectory)/src/PDMS/OneBranch/Build/versioning.cmd'
              workingDirectory: '$(Build.SourcesDirectory)' 

          - task: CmdLine@2
            displayName: 'Restore Nuget Packages'
            inputs:
              script: '$(Build.SourcesDirectory)/src/PDMS/OneBranch/Build/restore.cmd'
              workingDirectory: '$(Build.SourcesDirectory)'   
         
          - task: CmdLine@2
            displayName: 'Build the solution'
            inputs:
              script: '$(Build.SourcesDirectory)/src/PDMS/OneBranch/Build/build-pdms-client.cmd Release'
              workingDirectory: '$(Build.SourcesDirectory)'

          - task: CmdLine@2
            displayName: 'Build PDMS Package Client'
            inputs:
              script: '$(Build.SourcesDirectory)/src/PDMS/OneBranch/Build/package-pdms-client.cmd PROD Release'
              workingDirectory: '$(Build.SourcesDirectory)'

          - task: VSTest@2
            inputs:
             testSelector: 'testAssemblies'
             testAssemblyVer2: |
               **/*test*.dll
               !**/*TestAdapter.dll
               !**/obj/**
             searchFolder: '$(Build.SourcesDirectory)/src/PDMS'
             testFiltercriteria: '"TestCategory=Unit"'
           
          - task: PowerShell@2
            displayName: 'Create Directories'
            inputs:
              targetType: 'inline'
              script: |
                New-Item -ItemType Directory -Force -Path $(Build.SourcesDirectory)\src\PDMS\OneBranch\Deployment\drop\outputs\build\bin
                New-Item -ItemType Directory -Force -Path $(Build.SourcesDirectory)\src\PDMS\OneBranch\Deployment\drop\outputs\build\nupkgs

          - task: CopyFiles@2
            displayName: 'Copy Build output to bin'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)\src\PDMS\bin
              contents: |
                  **\*.dll
                  **\*.exe
                  **\*.ps1
              TargetFolder: $(Build.SourcesDirectory)\src\PDMS\OneBranch\Deployment\drop\outputs\build\bin
         
          - task: CopyFiles@2
            displayName: 'Copy Onebranch output nupkgs'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)\src\PDMS\nupkgs
              contents: '**/*'
              TargetFolder: $(Build.SourcesDirectory)\src\PDMS\OneBranch\Deployment\drop\outputs\build\nupkgs

          - task: onebranch.pipeline.signing@1
            displayName: 'Sign files'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              signing_profile: 'internal_azure_service'
              files_to_sign: '**/*.exe;**/*.dll;**/*.ps1;**/bin/**/*.json'
              search_root: '$(Build.SourcesDirectory)\src\PDMS\OneBranch\Deployment\drop\outputs\build'
                      
          - task: PublishSecurityAnalysisLogs@3
            displayName: Publish Security Analysis Logs
            inputs:
              ArtifactName: 'CodeAnalysisLogs'
              ArtifactType: 'Container'
              AllTools: true
              ToolLogsNotFoundAction: 'Standard' 

         
